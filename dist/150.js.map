{"version":3,"file":"150.js","mappings":"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","sources":["webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/_input.scss","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/loading/loading.component.scss","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/page/_page.scss","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/section/ohri-form-section.scss","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/sidebar/ohri-form-sidebar.component.scss","webpack://openmrs-ohri-form-engine-lib/./src/forms/ohri-form.scss","webpack://openmrs-ohri-form-engine-lib/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://openmrs-ohri-form-engine-lib/./src/forms/constants.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/utils/boolean-utils.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/utils/expression-runner.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/validators/ohri-form-validator.ts","webpack://openmrs-ohri-form-engine-lib/./src/utils/forms-loader.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/ohri-form.scss?3e5f","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/loading/loading.component.scss?0119","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/loading/loading.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/sidebar/ohri-form-sidebar.component.scss?714e","webpack://openmrs-ohri-form-engine-lib/./src/utils/ohri-sidebar.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/sidebar/ohri-form-sidebar.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/ohri-form-context.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/ohri-form.resource.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/_input.scss?661b","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/unspecified/ohri-unspecified.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/section/ohri-form-section.scss?1b1a","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/section/ohri-form-section.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/group/ohri-obs-group.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/label/ohri-label.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/value/ohri-value.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/utils/ohri-form-helper.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/validators/default-value-validator.ts","webpack://openmrs-ohri-form-engine-lib/./src/api/api.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/content-switcher/ohri-content-switcher.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/date/ohri-date.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/location/ohri-encounter-location.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/multi-select/ohri-multi-select.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/number/ohri-number.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/radio/ohri-radio.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/select/ohri-dropdown.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/text-area/ohri-text-area.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/text/ohri-text.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/toggle/ohri-toggle.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/repeat/ohri-repeat.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/submission-handlers/base-handlers.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/registry/registry.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/fixed-value/ohri-fixed-value.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/inputs/markdown/ohri-markdown.component.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/page/_page.scss?c24d","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/page/ohri-form-page.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/utils/instant-effect.ts","webpack://openmrs-ohri-form-engine-lib/./src/forms/components/encounter/ohri-encounter-form.tsx","webpack://openmrs-ohri-form-engine-lib/./src/forms/ohri-form.component.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri-form-engine-lib___input__productiveHeading01___VGGYq{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri-form-engine-lib___input__productiveHeading02___D\\\\+VqO{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri-form-engine-lib___input__productiveHeading03___8GxFh{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri-form-engine-lib___input__productiveHeading04___VAWDX{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri-form-engine-lib___input__productiveHeading05___ZZcs4{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri-form-engine-lib___input__productiveHeading06___SO85p{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri-form-engine-lib___input__bodyShort01___ierjZ{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri-form-engine-lib___input__helperText01___UdPjl{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri-form-engine-lib___input__bodyShort02___UuD4g{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri-form-engine-lib___input__bodyLong01___MkdDp{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri-form-engine-lib___input__bodyLong02___2DDLh{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri-form-engine-lib___input__label01___uv3kZ{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri-form-engine-lib___input__text01___Ea9qO{color:#161616}.openmrs-ohri-form-engine-lib___input__text02___vD6ek{color:#525252}aside{background-color:#fff !important}.openmrs-ohri-form-engine-lib___input__formField___CtX\\\\+0,.openmrs-ohri-form-engine-lib___input__numberInputWrapper___\\\\+Wf3J .bx--number,.openmrs-ohri-form-engine-lib___input__formInputField___UiTo4{padding-bottom:18px;margin-top:10px}.openmrs-ohri-form-engine-lib___input__formField___CtX\\\\+0>div>div>label,.openmrs-ohri-form-engine-lib___input__numberInputWrapper___\\\\+Wf3J .bx--number>div>div>label,.openmrs-ohri-form-engine-lib___input__formInputField___UiTo4>div>div>label{color:#525252}.openmrs-ohri-form-engine-lib___input__ohriFormLabel___jUVsE{font-size:.75rem}.openmrs-ohri-form-engine-lib___input__datePickerOverrides___jbrgh input{width:22.313rem !important}.openmrs-ohri-form-engine-lib___input__disabledLabelOverrides___eoUl6 label{color:#525252 !important}.openmrs-ohri-form-engine-lib___input__formInputField___UiTo4{width:auto}.openmrs-ohri-form-engine-lib___input__formInputField___UiTo4>div>div>label{max-width:auto}.openmrs-ohri-form-engine-lib___input__formInputField___UiTo4>div>div>div{width:22.313rem !important}.openmrs-ohri-form-engine-lib___input__multiselectOverride___SBjbC{width:auto;padding-bottom:15px}.openmrs-ohri-form-engine-lib___input__multiselectOverride___SBjbC>div>div{width:22.313rem !important}.openmrs-ohri-form-engine-lib___input__multiselectOverride___SBjbC>div div div input{border:0 !important;border-bottom:1px solid #8d8d8d !important}.openmrs-ohri-form-engine-lib___input__dropDownOverride___BW8nv>div div button{border-bottom:1px solid #8d8d8d !important}.openmrs-ohri-form-engine-lib___input__numberInputWrapper___\\\\+Wf3J .bx--number{width:22.313rem;font-size:.875rem}.openmrs-ohri-form-engine-lib___input__textContainer___gNqQG label{font-size:.875rem !important}.openmrs-ohri-form-engine-lib___input__selectedOption___UnLfz{border-radius:4px;width:15rem}.openmrs-ohri-form-engine-lib___input__selectedOption___UnLfz button{background-color:#f4f4f4}.openmrs-ohri-form-engine-lib___input__switchOverrides___IAdw2{background-color:#edf5ff !important;color:#0f62fe !important;padding:0 0 0 1rem;border:solid 1px #0f62fe !important}.openmrs-ohri-form-engine-lib___input__switchOverrides___IAdw2 button:focus{border:none !important}.openmrs-ohri-form-engine-lib___input__selectedOption___UnLfz button:before{display:none !important}.openmrs-ohri-form-engine-lib___input__switchOverridesNone___P62JC{background-color:#f4f4f4 !important;padding:0 0 0 1rem;border:solid 1px #a6c8ff !important}.openmrs-ohri-form-engine-lib___input__radioButton_ohri___\\\\+BvdD input[type=radio]{opacity:0 !important;position:fixed;width:0}.openmrs-ohri-form-engine-lib___input__radioButton_ohri___\\\\+BvdD label{display:inline-block;border:1px solid #a6c8ff;color:#525252;padding:.688rem 1rem;padding-right:3rem;border-radius:4px 0 0 4px;background-color:#f4f4f4}.openmrs-ohri-form-engine-lib___input__radioButton_ohri___\\\\+BvdD label:last-child{margin-left:-5px;border-radius:0 4px 4px 0}.openmrs-ohri-form-engine-lib___input__radioButton_ohri___\\\\+BvdD input[type=radio]:checked+label{color:#0f62fe;border-color:#0f62fe;background-color:#edf5ff}.openmrs-ohri-form-engine-lib___input__radioButton_ohri___\\\\+BvdD>.openmrs-ohri-form-engine-lib___input__bx--radio-button-wrapper___Q1Dd1{margin-right:0rem !important}.openmrs-ohri-form-engine-lib___input__textInputOverrides___zbEkv{width:22.313rem}.openmrs-ohri-form-engine-lib___input__textInputOverrides___zbEkv label{font-size:.875rem !important}.openmrs-ohri-form-engine-lib___input__unspecified___kRaD5{margin-top:-13px}.openmrs-ohri-form-engine-lib___input__unspecified___kRaD5>div label{font-size:12px;color:#525252;padding-bottom:1rem}.openmrs-ohri-form-engine-lib___input__errorLegend___4-LQI legend,.openmrs-ohri-form-engine-lib___input__errorLabel___XCuvZ label{color:#da1e28}.openmrs-ohri-form-engine-lib___input__unspecified___kRaD5>div label{font-size:12px;color:#525252}.openmrs-ohri-form-engine-lib___input__errorLabel___XCuvZ>div label{color:#da1e28 !important}.openmrs-ohri-form-engine-lib___input__obsGroupColumn___GrFv7{max-width:18rem}.openmrs-ohri-form-engine-lib___input__obsGroupColumn___GrFv7>div{margin-top:0 !important}.openmrs-ohri-form-engine-lib___input__obsGroupColumn___GrFv7>div>div>div{max-width:18rem !important}.openmrs-ohri-form-engine-lib___input__obsGroupColumn___GrFv7>div>div>div>div{max-width:18rem !important}.openmrs-ohri-form-engine-lib___input__repeatContentWrapper___Wh1BG{margin-top:.65rem;margin-bottom:2rem}.openmrs-ohri-form-engine-lib___input__ohriLabel___IKJah{width:auto !important}.openmrs-ohri-form-engine-lib___input__ohriLabel___IKJah .bx--assistive-text{max-width:30rem !important;font-size:.75rem;white-space:pre-line !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/root.scss\",\"webpack://./node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\",\"webpack://./src/forms/components/inputs/_input.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCrBF,mECyhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD3sB1B,oECqhBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CDvsB1B,mECihBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CDnsB1B,mEC6gBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CD/rB1B,mECygBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CD3rB1B,mECqgBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CDvrB1B,2DCigBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDnrB1B,4DC6fI,gBAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD/qB1B,2DCyfI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CD3qB1B,0DCqfI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDvqB1B,0DCifI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CDnqB1B,uDC6eI,gBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD/pB1B,sDACE,aEtBU,CFyBZ,sDACE,aDvEQ,CC0EV,MACG,gCAAA,CG9EH,uMACE,mBAAA,CACA,eAAA,CAGF,iPACE,aAAA,CAGF,6DACE,gBAAA,CAGF,yEACE,0BAAA,CAGF,4EACE,wBAAA,CAGF,8DAEE,UAAA,CAGF,4EACE,cAAA,CAGF,0EACE,0BAAA,CAGF,mEACE,UAAA,CACA,mBAAA,CAGF,2EACE,0BAAA,CAGF,qFACE,mBAAA,CACA,0CAAA,CAGF,+EACE,0CAAA,CAGF,+EAEE,eHpCiB,CGqCjB,iBAAA,CAGF,mEACE,4BAAA,CAGF,8DACE,iBAAA,CACA,WAAA,CAGF,qEACE,wBHhEM,CGmER,+DACE,mCAAA,CACA,wBAAA,CACA,kBAAA,CACA,mCAAA,CAGF,4EACE,sBAAA,CAGF,4EACE,uBAAA,CAGF,mEACE,mCAAA,CACA,kBAAA,CACA,mCAAA,CAGF,mFACE,oBAAA,CACA,cAAA,CACA,OAAA,CAGF,uEACE,oBAAA,CACA,wBAAA,CACA,aH5Fc,CG6Fd,oBAAA,CACA,kBAAA,CACA,yBAAA,CACA,wBHrGM,CGwGR,kFACE,gBAAA,CACA,yBAAA,CAGF,iGACE,aAAA,CACA,oBAAA,CACA,wBAAA,CAGF,yIACE,4BAAA,CAGF,kEACE,eH1GiB,CG6GnB,wEACE,4BAAA,CAGF,2DACE,gBAAA,CAGF,qEACE,cAAA,CACA,aHhIc,CGiId,mBAAA,CAGF,kIACE,aAAA,CAGF,qEACE,cAAA,CACA,aH1Ic,CG6IhB,oEACE,wBAAA,CAGF,8DACE,eAAA,CAGF,kEACE,uBAAA,CAIF,0EACE,0BAAA,CAIF,8EACE,0BAAA,CAGF,oEACE,iBAAA,CACA,kBAAA,CAGF,yDACE,qBAAA,CAGF,6EACE,0BAAA,CACA,gBAAA,CACA,+BAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/layout\\\";\\n@import \\\"carbon-components/scss/globals/scss/typography.scss\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-05: #161616;\\n$ui-background: #ffffff;\\n$color-gray-70: #525252;\\n$color-blue-60-2: #0f62fe;\\n$color-yellow-50: #feecae;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$brand-teal-01: #007d79;\\n$ohri-input-width: 22.313rem;\\n$ohri-home-background: #ededed;\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.productiveHeading05 {\\n  @include carbon--type-style(\\\"productive-heading-05\\\");\\n}\\n\\n.productiveHeading06 {\\n  @include carbon--type-style(\\\"productive-heading-06\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.helperText01 {\\n  @include carbon--type-style(\\\"helper-text-01\\\");\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style(\\\"body-short-02\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.bodyLong02 {\\n  @include carbon--type-style(\\\"body-long-02\\\");\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n}\\n\\n.text01 {\\n  color: $text-01;\\n}\\n\\n.text02 {\\n  color: $text-02;\\n}\\n\\naside {\\n   background-color: $ui-02 !important;\\n}\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\",\"@import \\\"../../../root.scss\\\";\\n\\n.formField {\\n  padding-bottom: 18px;\\n  margin-top: 10px;\\n}\\n\\n.formField > div > div > label {\\n  color: #525252;\\n}\\n\\n.ohriFormLabel {\\n  font-size: 0.75rem\\n}\\n\\n.datePickerOverrides input {\\n  width: $ohri-input-width !important;\\n}\\n\\n.disabledLabelOverrides label {\\n  color: #525252 !important;\\n}\\n\\n.formInputField {\\n  @extend .formField;\\n  width: auto;\\n}\\n\\n.formInputField > div > div > label {\\n  max-width: auto;\\n}\\n\\n.formInputField > div > div > div {\\n  width: $ohri-input-width !important;\\n}\\n\\n.multiselectOverride {\\n  width: auto;\\n  padding-bottom: 15px;\\n}\\n\\n.multiselectOverride > div > div {\\n  width: $ohri-input-width !important;\\n}\\n\\n.multiselectOverride > div div div input {\\n  border: 0 !important;\\n  border-bottom: 1px solid #8d8d8d !important;\\n}\\n\\n.dropDownOverride > div div button {\\n  border-bottom: 1px solid #8d8d8d !important;\\n}\\n\\n.numberInputWrapper :global(.bx--number) {\\n  @extend .formField;\\n  width: $ohri-input-width;\\n  font-size: 0.875rem;\\n}\\n\\n.textContainer label {\\n  font-size: 0.875rem !important;\\n}\\n\\n.selectedOption {\\n  border-radius: 4px;\\n  width: 15rem;\\n}\\n\\n.selectedOption button {\\n  background-color: $ui-01;\\n}\\n\\n.switchOverrides {\\n  background-color: #edf5ff !important;\\n  color: #0f62fe !important;\\n  padding: 0 0 0 1rem;\\n  border: solid 1px #0f62fe !important;\\n}\\n\\n.switchOverrides button:focus {\\n  border: none !important;\\n}\\n\\n.selectedOption button:before {\\n  display: none !important;\\n}\\n\\n.switchOverridesNone {\\n  background-color: $ui-01 !important;\\n  padding: 0 0 0 1rem;\\n  border: solid 1px #a6c8ff !important;\\n}\\n\\n.radioButton_ohri input[type=\\\"radio\\\"] {\\n  opacity: 0 !important;\\n  position: fixed;\\n  width: 0;\\n}\\n\\n.radioButton_ohri label {\\n  display: inline-block;\\n  border: 1px solid #a6c8ff;\\n  color: $color-gray-70;\\n  padding: 0.688rem 1rem;\\n  padding-right: 3rem;\\n  border-radius: 4px 0 0 4px;\\n  background-color: $ui-01;\\n}\\n\\n.radioButton_ohri label:last-child {\\n  margin-left: -5px;\\n  border-radius: 0 4px 4px 0;\\n}\\n\\n.radioButton_ohri input[type=\\\"radio\\\"]:checked + label {\\n  color: #0f62fe;\\n  border-color: #0f62fe;\\n  background-color: #edf5ff;\\n}\\n\\n.radioButton_ohri > .bx--radio-button-wrapper {\\n  margin-right: 0rem !important;\\n}\\n\\n.textInputOverrides {\\n  width: $ohri-input-width;\\n}\\n\\n.textInputOverrides label {\\n  font-size: 0.875rem !important;\\n}\\n\\n.unspecified {\\n  margin-top: -13px;\\n}\\n\\n.unspecified > div label {\\n  font-size: 12px;\\n  color: $color-gray-70;\\n  padding-bottom: 1rem;\\n}\\n\\n.errorLegend legend, .errorLabel label {\\n  color: #da1e28;\\n}\\n\\n.unspecified > div label {\\n  font-size: 12px;\\n  color: $color-gray-70;\\n}\\n\\n.errorLabel > div label {\\n  color: #da1e28 !important;\\n}\\n\\n.obsGroupColumn {\\n  max-width: 18rem;\\n}\\n\\n.obsGroupColumn > div {\\n  margin-top: 0 !important;\\n}\\n\\n/** Targets carbon's multiselect */\\n.obsGroupColumn > div > div > div {\\n  max-width: 18rem !important;\\n}\\n\\n/** Targets carbon's dropdown */\\n.obsGroupColumn > div > div > div > div {\\n  max-width: 18rem !important;\\n}\\n\\n.repeatContentWrapper {\\n  margin-top: 0.65rem;\\n  margin-bottom: 2rem;\\n}\\n\\n.ohriLabel {\\n  width: auto !important;\\n}\\n\\n.ohriLabel :global(.bx--assistive-text) {\\n  max-width: 30rem !important;\\n  font-size: 0.75rem;\\n  white-space: pre-line !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri-form-engine-lib___input__productiveHeading01___VGGYq\",\n\t\"productiveHeading02\": \"openmrs-ohri-form-engine-lib___input__productiveHeading02___D+VqO\",\n\t\"productiveHeading03\": \"openmrs-ohri-form-engine-lib___input__productiveHeading03___8GxFh\",\n\t\"productiveHeading04\": \"openmrs-ohri-form-engine-lib___input__productiveHeading04___VAWDX\",\n\t\"productiveHeading05\": \"openmrs-ohri-form-engine-lib___input__productiveHeading05___ZZcs4\",\n\t\"productiveHeading06\": \"openmrs-ohri-form-engine-lib___input__productiveHeading06___SO85p\",\n\t\"bodyShort01\": \"openmrs-ohri-form-engine-lib___input__bodyShort01___ierjZ\",\n\t\"helperText01\": \"openmrs-ohri-form-engine-lib___input__helperText01___UdPjl\",\n\t\"bodyShort02\": \"openmrs-ohri-form-engine-lib___input__bodyShort02___UuD4g\",\n\t\"bodyLong01\": \"openmrs-ohri-form-engine-lib___input__bodyLong01___MkdDp\",\n\t\"bodyLong02\": \"openmrs-ohri-form-engine-lib___input__bodyLong02___2DDLh\",\n\t\"label01\": \"openmrs-ohri-form-engine-lib___input__label01___uv3kZ\",\n\t\"text01\": \"openmrs-ohri-form-engine-lib___input__text01___Ea9qO\",\n\t\"text02\": \"openmrs-ohri-form-engine-lib___input__text02___vD6ek\",\n\t\"formField\": \"openmrs-ohri-form-engine-lib___input__formField___CtX+0\",\n\t\"numberInputWrapper\": \"openmrs-ohri-form-engine-lib___input__numberInputWrapper___+Wf3J\",\n\t\"formInputField\": \"openmrs-ohri-form-engine-lib___input__formInputField___UiTo4\",\n\t\"ohriFormLabel\": \"openmrs-ohri-form-engine-lib___input__ohriFormLabel___jUVsE\",\n\t\"datePickerOverrides\": \"openmrs-ohri-form-engine-lib___input__datePickerOverrides___jbrgh\",\n\t\"disabledLabelOverrides\": \"openmrs-ohri-form-engine-lib___input__disabledLabelOverrides___eoUl6\",\n\t\"multiselectOverride\": \"openmrs-ohri-form-engine-lib___input__multiselectOverride___SBjbC\",\n\t\"dropDownOverride\": \"openmrs-ohri-form-engine-lib___input__dropDownOverride___BW8nv\",\n\t\"textContainer\": \"openmrs-ohri-form-engine-lib___input__textContainer___gNqQG\",\n\t\"selectedOption\": \"openmrs-ohri-form-engine-lib___input__selectedOption___UnLfz\",\n\t\"switchOverrides\": \"openmrs-ohri-form-engine-lib___input__switchOverrides___IAdw2\",\n\t\"switchOverridesNone\": \"openmrs-ohri-form-engine-lib___input__switchOverridesNone___P62JC\",\n\t\"radioButton_ohri\": \"openmrs-ohri-form-engine-lib___input__radioButton_ohri___+BvdD\",\n\t\"bx--radio-button-wrapper\": \"openmrs-ohri-form-engine-lib___input__bx--radio-button-wrapper___Q1Dd1\",\n\t\"textInputOverrides\": \"openmrs-ohri-form-engine-lib___input__textInputOverrides___zbEkv\",\n\t\"unspecified\": \"openmrs-ohri-form-engine-lib___input__unspecified___kRaD5\",\n\t\"errorLegend\": \"openmrs-ohri-form-engine-lib___input__errorLegend___4-LQI\",\n\t\"errorLabel\": \"openmrs-ohri-form-engine-lib___input__errorLabel___XCuvZ\",\n\t\"obsGroupColumn\": \"openmrs-ohri-form-engine-lib___input__obsGroupColumn___GrFv7\",\n\t\"repeatContentWrapper\": \"openmrs-ohri-form-engine-lib___input__repeatContentWrapper___Wh1BG\",\n\t\"ohriLabel\": \"openmrs-ohri-form-engine-lib___input__ohriLabel___IKJah\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".openmrs-ohri-form-engine-lib__loading-component__centerLoadingSVG___HsdRM{display:flex;width:100vw;height:100vh;justify-content:center;align-items:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/forms/components/loading/loading.component.scss\"],\"names\":[],\"mappings\":\"AAAA,2EACI,YAAA,CACA,WAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA\",\"sourcesContent\":[\".centerLoadingSVG {\\n    display: flex;\\n    width: 100vw;\\n    height: 100vh;\\n    justify-content: center;\\n    align-items: center;\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"centerLoadingSVG\": \"openmrs-ohri-form-engine-lib__loading-component__centerLoadingSVG___HsdRM\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri-form-engine-lib___page__productiveHeading01___2zRi2{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri-form-engine-lib___page__productiveHeading02___s-N5H{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri-form-engine-lib___page__productiveHeading03___CKFq7{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri-form-engine-lib___page__productiveHeading04___NRp6z{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri-form-engine-lib___page__productiveHeading05___q9-l3{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri-form-engine-lib___page__productiveHeading06___Oihbi{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri-form-engine-lib___page__bodyShort01___\\\\+41h-{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri-form-engine-lib___page__helperText01___EjXAw{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri-form-engine-lib___page__bodyShort02___10HtJ{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri-form-engine-lib___page__bodyLong01___fxFEK{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri-form-engine-lib___page__bodyLong02___XCqpR{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri-form-engine-lib___page__label01___xvAVy{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri-form-engine-lib___page__text01___SxqhE{color:#161616}.openmrs-ohri-form-engine-lib___page__text02___fqG4h{color:#525252}aside{background-color:#fff !important}.openmrs-ohri-form-engine-lib___page__divider___5VGx8{background-color:rgba(107,104,104,.5);margin:25px 0}.openmrs-ohri-form-engine-lib___page__pageContent___ZD1Br:last-child>hr{display:none}.openmrs-ohri-form-engine-lib___page__pageHeader___JkWiS{display:flex;flex-direction:row;margin:20px 0 20px 0}.openmrs-ohri-form-engine-lib___page__pageTitle___WXfZi{font-size:1.25rem;font-weight:600;line-height:1.4;color:var(--color-gray-100);width:100%}.openmrs-ohri-form-engine-lib___page__required___vA6rr{margin:.25rem 27rem .5rem 0;font-size:.875rem;line-height:1.29;letter-spacing:.16px;color:var(--color-gray-70);width:100%}.openmrs-ohri-form-engine-lib___page__formSection___c1co8{flex:1 1 65%}.openmrs-ohri-form-engine-lib___page__formSection___c1co8>div>fieldset{margin-bottom:0 !important}.openmrs-ohri-form-engine-lib___page__collapseToggle___y\\\\+0hm{margin-Left:-180px;margin-bottom:20px;margin-top:-10px}.openmrs-ohri-form-engine-lib___page__sectionContent___otGPG>div{background-color:#f4f4f4}.openmrs-ohri-form-engine-lib___page__formSection___c1co8>div div div input,.openmrs-ohri-form-engine-lib___page__formSection___c1co8>div div div textarea,.openmrs-ohri-form-engine-lib___page__formSection___c1co8>div div div dropdown,.openmrs-ohri-form-engine-lib___page__formSection___c1co8 .bx--dropdown button{background-color:#fff !important}@media(min-width: 640px){.bx--accordion__content{padding-right:2rem !important}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/root.scss\",\"webpack://./node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\",\"webpack://./src/forms/components/page/_page.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCrBF,kECyhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD3sB1B,kECqhBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CDvsB1B,kECihBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CDnsB1B,kEC6gBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CD/rB1B,kECygBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CD3rB1B,kECqgBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CDvrB1B,2DCigBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDnrB1B,2DC6fI,gBAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD/qB1B,0DCyfI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CD3qB1B,yDCqfI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDvqB1B,yDCifI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CDnqB1B,sDC6eI,gBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD/pB1B,qDACE,aEtBU,CFyBZ,qDACE,aDvEQ,CC0EV,MACG,gCAAA,CG9EH,sDACE,qCAAA,CACA,aAAA,CAGF,wEACE,YAAA,CAGF,yDACE,YAAA,CACA,kBAAA,CACA,oBAAA,CAGF,wDACE,iBAAA,CACA,eAAA,CACA,eAAA,CACA,2BAAA,CACA,UAAA,CAGF,uDACE,2BAAA,CACA,iBAAA,CACA,gBAAA,CACA,oBAAA,CACA,0BAAA,CACA,UAAA,CAGF,0DACE,YAAA,CAGF,uEACE,0BAAA,CAGF,8DACE,kBAAA,CACA,kBAAA,CACA,gBAAA,CAGF,iEACE,wBH3CM,CG8CR,yTAIE,gCAAA,CAGF,yBACE,wBACE,6BAAA,CAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/layout\\\";\\n@import \\\"carbon-components/scss/globals/scss/typography.scss\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-05: #161616;\\n$ui-background: #ffffff;\\n$color-gray-70: #525252;\\n$color-blue-60-2: #0f62fe;\\n$color-yellow-50: #feecae;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$brand-teal-01: #007d79;\\n$ohri-input-width: 22.313rem;\\n$ohri-home-background: #ededed;\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.productiveHeading05 {\\n  @include carbon--type-style(\\\"productive-heading-05\\\");\\n}\\n\\n.productiveHeading06 {\\n  @include carbon--type-style(\\\"productive-heading-06\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.helperText01 {\\n  @include carbon--type-style(\\\"helper-text-01\\\");\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style(\\\"body-short-02\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.bodyLong02 {\\n  @include carbon--type-style(\\\"body-long-02\\\");\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n}\\n\\n.text01 {\\n  color: $text-01;\\n}\\n\\n.text02 {\\n  color: $text-02;\\n}\\n\\naside {\\n   background-color: $ui-02 !important;\\n}\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\",\"@import \\\"../../../root.scss\\\";\\n\\n.divider {\\n  background-color: rgba(107, 104, 104, 0.5);\\n  margin: 25px 0;\\n}\\n\\n.pageContent:last-child > hr {\\n  display: none;\\n}\\n\\n.pageHeader {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 20px 0 20px 0;\\n}\\n\\n.pageTitle {\\n  font-size: 1.25rem;\\n  font-weight: 600;\\n  line-height: 1.4;\\n  color: var(--color-gray-100);\\n  width: 100%;\\n}\\n\\n.required {\\n  margin: 0.25rem 27rem 0.5rem 0;\\n  font-size: 0.875rem;\\n  line-height: 1.29;\\n  letter-spacing: 0.16px;\\n  color: var(--color-gray-70);\\n  width: 100%;\\n}\\n\\n.formSection {\\n  flex: 1 1 65%;\\n}\\n\\n.formSection > div > fieldset {\\n  margin-bottom: 0 !important;\\n}\\n\\n.collapseToggle {\\n  margin-Left: -180px;\\n  margin-bottom: 20px;\\n  margin-top: -10px;\\n}\\n\\n.sectionContent > div {\\n  background-color: $ui-01;\\n}\\n\\n.formSection > div div div input,\\n.formSection > div div div textarea,\\n.formSection > div div div dropdown,\\n.formSection :global(.bx--dropdown) button {\\n  background-color: #ffffff !important;\\n}\\n\\n@media (min-width: 640px) {\\n  :global(.bx--accordion__content) {\\n    padding-right: 2rem !important;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri-form-engine-lib___page__productiveHeading01___2zRi2\",\n\t\"productiveHeading02\": \"openmrs-ohri-form-engine-lib___page__productiveHeading02___s-N5H\",\n\t\"productiveHeading03\": \"openmrs-ohri-form-engine-lib___page__productiveHeading03___CKFq7\",\n\t\"productiveHeading04\": \"openmrs-ohri-form-engine-lib___page__productiveHeading04___NRp6z\",\n\t\"productiveHeading05\": \"openmrs-ohri-form-engine-lib___page__productiveHeading05___q9-l3\",\n\t\"productiveHeading06\": \"openmrs-ohri-form-engine-lib___page__productiveHeading06___Oihbi\",\n\t\"bodyShort01\": \"openmrs-ohri-form-engine-lib___page__bodyShort01___+41h-\",\n\t\"helperText01\": \"openmrs-ohri-form-engine-lib___page__helperText01___EjXAw\",\n\t\"bodyShort02\": \"openmrs-ohri-form-engine-lib___page__bodyShort02___10HtJ\",\n\t\"bodyLong01\": \"openmrs-ohri-form-engine-lib___page__bodyLong01___fxFEK\",\n\t\"bodyLong02\": \"openmrs-ohri-form-engine-lib___page__bodyLong02___XCqpR\",\n\t\"label01\": \"openmrs-ohri-form-engine-lib___page__label01___xvAVy\",\n\t\"text01\": \"openmrs-ohri-form-engine-lib___page__text01___SxqhE\",\n\t\"text02\": \"openmrs-ohri-form-engine-lib___page__text02___fqG4h\",\n\t\"divider\": \"openmrs-ohri-form-engine-lib___page__divider___5VGx8\",\n\t\"pageContent\": \"openmrs-ohri-form-engine-lib___page__pageContent___ZD1Br\",\n\t\"pageHeader\": \"openmrs-ohri-form-engine-lib___page__pageHeader___JkWiS\",\n\t\"pageTitle\": \"openmrs-ohri-form-engine-lib___page__pageTitle___WXfZi\",\n\t\"required\": \"openmrs-ohri-form-engine-lib___page__required___vA6rr\",\n\t\"formSection\": \"openmrs-ohri-form-engine-lib___page__formSection___c1co8\",\n\t\"collapseToggle\": \"openmrs-ohri-form-engine-lib___page__collapseToggle___y+0hm\",\n\t\"sectionContent\": \"openmrs-ohri-form-engine-lib___page__sectionContent___otGPG\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".openmrs-ohri-form-engine-lib__ohri-form-section__section___4ISPb{border-radius:solid 1px rgba(107,104,104,.5);margin-bottom:3.063rem}.openmrs-ohri-form-engine-lib__ohri-form-section__sectionTitle___Ej3Y8{max-width:200px;font-size:1rem;font-weight:600;line-height:1.38;color:#525252;margin-bottom:.5rem}.openmrs-ohri-form-engine-lib__ohri-form-section__sectionContainer___wlUkw{margin-top:1.438rem;width:90%}.openmrs-ohri-form-engine-lib__ohri-form-section__sectionContainer___wlUkw .bx--fieldset{margin-bottom:0}.openmrs-ohri-form-engine-lib__ohri-form-section__sectionContainer___wlUkw>div{margin-bottom:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/forms/components/section/ohri-form-section.scss\"],\"names\":[],\"mappings\":\"AAAA,kEACE,4CAAA,CACA,sBAAA,CAGF,uEACE,eAAA,CACA,cAAA,CACA,eAAA,CACA,gBAAA,CACA,aAAA,CACA,mBAAA,CAGF,2EACE,mBAAA,CACA,SAAA,CAOF,yFACE,eAAA,CAGF,+EACE,kBAAA\",\"sourcesContent\":[\".section {\\n  border-radius: solid 1px rgba(107, 104, 104, 0.5);\\n  margin-bottom: 3.063rem;\\n}\\n\\n.sectionTitle {\\n  max-width: 200px;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  line-height: 1.38;\\n  color: #525252;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.sectionContainer {\\n  margin-top: 1.438rem;\\n  width: 90%;\\n}\\n\\n.questionOverrides {\\n  //margin-top: 14px;\\n}\\n\\n.sectionContainer :global(.bx--fieldset) {\\n  margin-bottom: 0;\\n}\\n\\n.sectionContainer > div {\\n  margin-bottom: 1rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"section\": \"openmrs-ohri-form-engine-lib__ohri-form-section__section___4ISPb\",\n\t\"sectionTitle\": \"openmrs-ohri-form-engine-lib__ohri-form-section__sectionTitle___Ej3Y8\",\n\t\"sectionContainer\": \"openmrs-ohri-form-engine-lib__ohri-form-section__sectionContainer___wlUkw\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading01___jOwI\\\\+{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading02___SuvP-{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading03___nV-OO{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading04___mcuss{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading05___5olaf{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading06___5i4RK{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyShort01___n11SL{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__helperText01___aBD2U{font-size:.75rem;line-height:1.34;letter-spacing:.32px}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyShort02___QC-UC{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyLong01___HYDan{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyLong02___gKgWH{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__label01___rB046{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__text01___PUb5d{color:#161616}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__text02___7oifi{color:#525252}aside{background-color:#fff !important}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebar___uCATc{width:12rem;min-height:8rem;overscroll-behavior:contain;margin:1px 13px 15px 0}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarList___1obKN{max-Height:100%}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidenavActions___alb1j{margin-left:.6rem}@media all and (device-width: 600px)and (device-height: 1024px)and (orientation: portrait){.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebar___uCATc{width:11rem;max-height:500px;margin-right:20px;position:fixed}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarList___1obKN{max-Height:200px;overflow-y:scroll}}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__link___WRhMS{margin:.375rem 0 .375rem .5rem;font-size:1rem;line-height:1.43;letter-spacing:.16px;color:#161616;cursor:pointer}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__link___WRhMS{margin:.375rem 0 .375rem .5rem;font-size:1rem;line-height:1.43;letter-spacing:.16px;color:#161616;cursor:pointer}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__link___WRhMS:hover{outline:none}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSection___9H4oq{border-left:.5rem solid #9ef0f0;height:auto;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#fff;cursor:pointer}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSectionActive___PRGhv{border-left:.5rem solid #009d9a;height:auto;font-weight:600;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#ededed;cursor:pointer}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSectionDone___MNmp\\\\+{border-left:.5rem solid #42be65;height:auto;margin:.122rem 0 .122rem;padding:.382rem .375rem .118rem 1rem;background-color:#defbe6;cursor:pointer}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSectionLink___49bXh{font-size:.875rem;font-stretch:normal;font-style:normal;line-height:1.43;letter-spacing:.16px;color:#161616}.openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sideBarHorizontalLine___GqfjW{margin-top:1.5rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/root.scss\",\"webpack://./node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\",\"webpack://./src/forms/components/sidebar/ohri-form-sidebar.component.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCrBF,yFCyhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD3sB1B,wFCqhBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CDvsB1B,wFCihBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CDnsB1B,wFC6gBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CD/rB1B,wFCygBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CD3rB1B,wFCqgBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CDvrB1B,gFCigBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDnrB1B,iFC6fI,gBAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD/qB1B,gFCyfI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CD3qB1B,+ECqfI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDvqB1B,+ECifI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CDnqB1B,4EC6eI,gBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD/pB1B,2EACE,aEtBU,CFyBZ,2EACE,aDvEQ,CC0EV,MACG,gCAAA,CG9EH,4EACE,WAAA,CAEA,eAAA,CACA,2BAAA,CACA,sBAAA,CAGF,gFACE,eAAA,CAGF,mFACE,iBAAA,CAGF,2FACE,4EACE,WAAA,CACA,gBAAA,CACA,iBAAA,CACA,cAAA,CAGF,gFACE,gBAAA,CACA,iBAAA,CAAA,CAIJ,yEACE,8BAAA,CACA,cAAA,CACA,gBAAA,CACA,oBAAA,CACA,aAAA,CACA,cAAA,CAIF,yEACE,8BAAA,CACA,cAAA,CACA,gBAAA,CACA,oBAAA,CACA,aAAA,CACA,cAAA,CAGF,+EACE,YAAA,CAIF,mFACE,+BAAA,CACA,WAAA,CACA,wBAAA,CACA,oCAAA,CACA,qBAAA,CACA,cAAA,CAGF,yFACE,+BAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CACA,oCAAA,CACA,wBAAA,CACA,cAAA,CAGF,wFACE,+BAAA,CACA,WAAA,CACA,wBAAA,CACA,oCAAA,CACA,wBAAA,CACA,cAAA,CAGF,uFACE,iBAAA,CACA,mBAAA,CACA,iBAAA,CACA,gBAAA,CACA,oBAAA,CACA,aAAA,CAGF,0FACE,iBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/layout\\\";\\n@import \\\"carbon-components/scss/globals/scss/typography.scss\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-05: #161616;\\n$ui-background: #ffffff;\\n$color-gray-70: #525252;\\n$color-blue-60-2: #0f62fe;\\n$color-yellow-50: #feecae;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$brand-teal-01: #007d79;\\n$ohri-input-width: 22.313rem;\\n$ohri-home-background: #ededed;\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.productiveHeading05 {\\n  @include carbon--type-style(\\\"productive-heading-05\\\");\\n}\\n\\n.productiveHeading06 {\\n  @include carbon--type-style(\\\"productive-heading-06\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.helperText01 {\\n  @include carbon--type-style(\\\"helper-text-01\\\");\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style(\\\"body-short-02\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.bodyLong02 {\\n  @include carbon--type-style(\\\"body-long-02\\\");\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n}\\n\\n.text01 {\\n  color: $text-01;\\n}\\n\\n.text02 {\\n  color: $text-02;\\n}\\n\\naside {\\n   background-color: $ui-02 !important;\\n}\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\",\"@import \\\"../../../root.scss\\\";\\n\\n.sidebar {\\n  width: 12rem;\\n  //padding: 0 0 109px;\\n  min-height: 8rem;\\n  overscroll-behavior: contain;\\n  margin: 1px 13px 15px 0;\\n}\\n\\n.sidebarList {\\n  max-Height: 100%;\\n}\\n\\n.sidenavActions {\\n  margin-left: 0.6rem;\\n}\\n\\n@media all and (device-width: 600px) and (device-height: 1024px) and (orientation: portrait) {\\n  .sidebar {\\n    width: 11rem;\\n    max-height: 500px;\\n    margin-right: 20px;\\n    position: fixed;\\n  }\\n\\n  .sidebarList {\\n    max-Height: 200px;\\n    overflow-y: scroll;\\n  }\\n}\\n\\n.link {\\n  margin: 0.375rem 0 0.375rem 0.5rem;\\n  font-size: 1rem;\\n  line-height: 1.43;\\n  letter-spacing: 0.16px;\\n  color: #161616;\\n  cursor: pointer;\\n}\\n\\n\\n.link {\\n  margin: 0.375rem 0 0.375rem 0.5rem;\\n  font-size: 1rem;\\n  line-height: 1.43;\\n  letter-spacing: 0.16px;\\n  color: #161616;\\n  cursor: pointer;\\n}\\n\\n.link:hover {\\n  outline: none;\\n}\\n\\n// Sidebar-Section\\n.sidebarSection {\\n  border-left: 0.5rem solid #9ef0f0;\\n  height: auto;\\n  margin: 0.122rem 0 0.122rem;\\n  padding: 0.382rem 0.375rem 0.118rem 1rem;\\n  background-color: #ffffff;\\n  cursor: pointer;\\n}\\n\\n.sidebarSectionActive {\\n  border-left: 0.5rem solid #009d9a;\\n  height: auto;\\n  font-weight: 600;\\n  margin: 0.122rem 0 0.122rem;\\n  padding: 0.382rem 0.375rem 0.118rem 1rem;\\n  background-color: #ededed;\\n  cursor: pointer;\\n}\\n\\n.sidebarSectionDone {\\n  border-left: 0.5rem solid #42be65;\\n  height: auto;\\n  margin: 0.122rem 0 0.122rem;\\n  padding: 0.382rem 0.375rem 0.118rem 1rem;\\n  background-color: #defbe6;\\n  cursor: pointer;\\n}\\n\\n.sidebarSectionLink {\\n  font-size: 0.875rem;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: 1.43;\\n  letter-spacing: 0.16px;\\n  color: #161616;\\n}\\n\\n.sideBarHorizontalLine {\\n  margin-top: 1.5rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading01___jOwI+\",\n\t\"productiveHeading02\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading02___SuvP-\",\n\t\"productiveHeading03\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading03___nV-OO\",\n\t\"productiveHeading04\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading04___mcuss\",\n\t\"productiveHeading05\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading05___5olaf\",\n\t\"productiveHeading06\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__productiveHeading06___5i4RK\",\n\t\"bodyShort01\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyShort01___n11SL\",\n\t\"helperText01\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__helperText01___aBD2U\",\n\t\"bodyShort02\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyShort02___QC-UC\",\n\t\"bodyLong01\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyLong01___HYDan\",\n\t\"bodyLong02\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__bodyLong02___gKgWH\",\n\t\"label01\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__label01___rB046\",\n\t\"text01\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__text01___PUb5d\",\n\t\"text02\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__text02___7oifi\",\n\t\"sidebar\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebar___uCATc\",\n\t\"sidebarList\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarList___1obKN\",\n\t\"sidenavActions\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidenavActions___alb1j\",\n\t\"link\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__link___WRhMS\",\n\t\"sidebarSection\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSection___9H4oq\",\n\t\"sidebarSectionActive\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSectionActive___PRGhv\",\n\t\"sidebarSectionDone\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSectionDone___MNmp+\",\n\t\"sidebarSectionLink\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sidebarSectionLink___49bXh\",\n\t\"sideBarHorizontalLine\": \"openmrs-ohri-form-engine-lib__ohri-form-sidebar-component__sideBarHorizontalLine___GqfjW\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".openmrs-ohri-form-engine-lib__ohri-form__ohriForm___IgdeW{height:100%;overflow:hidden}.openmrs-ohri-form-engine-lib__ohri-form__ohriFormContainer___oL9F2{display:-webkit-flex;height:90vh;overflow-y:hidden}.openmrs-ohri-form-engine-lib__ohri-form__formContent___tdqFH{margin:0;flex-basis:65%;flex-grow:1;flex-shrink:1;position:relative;overflow-y:auto}.openmrs-ohri-form-engine-lib__ohri-form__ohriFormContainer___oL9F2 .bx--label{font-size:.875rem}@media(max-width: 768px){.openmrs-ohri-form-engine-lib__ohri-form__ohriFormContainer___oL9F2{height:100vh}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/forms/ohri-form.scss\"],\"names\":[],\"mappings\":\"AAIA,2DACE,WAAA,CACA,eAAA,CAGF,oEACE,oBAAA,CACA,WAAA,CACA,iBAAA,CAGF,8DACE,QAAA,CACA,cAAA,CACA,WAAA,CACA,aAAA,CACA,iBAAA,CACA,eAAA,CAIF,+EACE,iBAAA,CAOF,yBAME,oEACE,YAAA,CAAA\",\"sourcesContent\":[\":global(.contextWorkspaceContainer) {\\n  //overflow-y: auto;\\n}\\n\\n.ohriForm {\\n  height: 100%;\\n  overflow: hidden;\\n}\\n\\n.ohriFormContainer {\\n  display: -webkit-flex;\\n  height: 90vh;\\n  overflow-y: hidden;\\n}\\n\\n.formContent {\\n  margin: 0;\\n  flex-basis: 65%;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  position: relative;\\n  overflow-y: auto;\\n  //padding: 0 0 15rem 5px;\\n}\\n\\n.ohriFormContainer :global(.bx--label) {\\n  font-size: .875rem;\\n}\\n\\n@media only screen and (max-width: 640px) {\\n  //\\n}\\n\\n@media (max-width: 768px) {\\n  .sidebar {\\n  }\\n\\n  .formContent {\\n  }\\n  .ohriFormContainer {\\n    height: 100vh;\\n  }\\n}\\n\\n@media (max-width: 1024px) {\\n  .sidebar {\\n\\n  }\\n\\n  .formContent {\\n  }\\n}\\n\\n@media (max-width: 1440px) {\\n  .sidebar {\\n  }\\n\\n  .formContent {\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"ohriForm\": \"openmrs-ohri-form-engine-lib__ohri-form__ohriForm___IgdeW\",\n\t\"ohriFormContainer\": \"openmrs-ohri-form-engine-lib__ohri-form__ohriFormContainer___oL9F2\",\n\t\"formContent\": \"openmrs-ohri-form-engine-lib__ohri-form__formContent___tdqFH\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./af\": 2786,\n\t\"./af.js\": 2786,\n\t\"./ar\": 867,\n\t\"./ar-dz\": 4130,\n\t\"./ar-dz.js\": 4130,\n\t\"./ar-kw\": 6135,\n\t\"./ar-kw.js\": 6135,\n\t\"./ar-ly\": 6440,\n\t\"./ar-ly.js\": 6440,\n\t\"./ar-ma\": 7702,\n\t\"./ar-ma.js\": 7702,\n\t\"./ar-sa\": 6040,\n\t\"./ar-sa.js\": 6040,\n\t\"./ar-tn\": 7100,\n\t\"./ar-tn.js\": 7100,\n\t\"./ar.js\": 867,\n\t\"./az\": 1083,\n\t\"./az.js\": 1083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 8338,\n\t\"./bg.js\": 8338,\n\t\"./bm\": 7438,\n\t\"./bm.js\": 7438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 6225,\n\t\"./bn-bd.js\": 6225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 1560,\n\t\"./bo.js\": 1560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 622,\n\t\"./bs.js\": 622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 877,\n\t\"./cv.js\": 877,\n\t\"./cy\": 7373,\n\t\"./cy.js\": 7373,\n\t\"./da\": 4780,\n\t\"./da.js\": 4780,\n\t\"./de\": 9740,\n\t\"./de-at\": 217,\n\t\"./de-at.js\": 217,\n\t\"./de-ch\": 894,\n\t\"./de-ch.js\": 894,\n\t\"./de.js\": 9740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 837,\n\t\"./el.js\": 837,\n\t\"./en-au\": 8348,\n\t\"./en-au.js\": 8348,\n\t\"./en-ca\": 7925,\n\t\"./en-ca.js\": 7925,\n\t\"./en-gb\": 2243,\n\t\"./en-gb.js\": 2243,\n\t\"./en-ie\": 6436,\n\t\"./en-ie.js\": 6436,\n\t\"./en-il\": 7207,\n\t\"./en-il.js\": 7207,\n\t\"./en-in\": 4175,\n\t\"./en-in.js\": 4175,\n\t\"./en-nz\": 6319,\n\t\"./en-nz.js\": 6319,\n\t\"./en-sg\": 1662,\n\t\"./en-sg.js\": 1662,\n\t\"./eo\": 2915,\n\t\"./eo.js\": 2915,\n\t\"./es\": 5655,\n\t\"./es-do\": 5251,\n\t\"./es-do.js\": 5251,\n\t\"./es-mx\": 6112,\n\t\"./es-mx.js\": 6112,\n\t\"./es-us\": 1146,\n\t\"./es-us.js\": 1146,\n\t\"./es.js\": 5655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 7763,\n\t\"./eu.js\": 7763,\n\t\"./fa\": 6959,\n\t\"./fa.js\": 6959,\n\t\"./fi\": 1897,\n\t\"./fi.js\": 1897,\n\t\"./fil\": 2549,\n\t\"./fil.js\": 2549,\n\t\"./fo\": 4694,\n\t\"./fo.js\": 4694,\n\t\"./fr\": 4470,\n\t\"./fr-ca\": 3049,\n\t\"./fr-ca.js\": 3049,\n\t\"./fr-ch\": 2330,\n\t\"./fr-ch.js\": 2330,\n\t\"./fr.js\": 4470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 9295,\n\t\"./ga.js\": 9295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 8794,\n\t\"./gl.js\": 8794,\n\t\"./gom-deva\": 4980,\n\t\"./gom-deva.js\": 4980,\n\t\"./gom-latn\": 3168,\n\t\"./gom-latn.js\": 3168,\n\t\"./gu\": 5349,\n\t\"./gu.js\": 5349,\n\t\"./he\": 4206,\n\t\"./he.js\": 4206,\n\t\"./hi\": 94,\n\t\"./hi.js\": 94,\n\t\"./hr\": 316,\n\t\"./hr.js\": 316,\n\t\"./hu\": 2138,\n\t\"./hu.js\": 2138,\n\t\"./hy-am\": 1423,\n\t\"./hy-am.js\": 1423,\n\t\"./id\": 9218,\n\t\"./id.js\": 9218,\n\t\"./is\": 135,\n\t\"./is.js\": 135,\n\t\"./it\": 626,\n\t\"./it-ch\": 150,\n\t\"./it-ch.js\": 150,\n\t\"./it.js\": 626,\n\t\"./ja\": 9183,\n\t\"./ja.js\": 9183,\n\t\"./jv\": 4286,\n\t\"./jv.js\": 4286,\n\t\"./ka\": 2105,\n\t\"./ka.js\": 2105,\n\t\"./kk\": 7772,\n\t\"./kk.js\": 7772,\n\t\"./km\": 8758,\n\t\"./km.js\": 8758,\n\t\"./kn\": 9282,\n\t\"./kn.js\": 9282,\n\t\"./ko\": 3730,\n\t\"./ko.js\": 3730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 3291,\n\t\"./ky.js\": 3291,\n\t\"./lb\": 6841,\n\t\"./lb.js\": 6841,\n\t\"./lo\": 5466,\n\t\"./lo.js\": 5466,\n\t\"./lt\": 7010,\n\t\"./lt.js\": 7010,\n\t\"./lv\": 7595,\n\t\"./lv.js\": 7595,\n\t\"./me\": 9861,\n\t\"./me.js\": 9861,\n\t\"./mi\": 5493,\n\t\"./mi.js\": 5493,\n\t\"./mk\": 5966,\n\t\"./mk.js\": 5966,\n\t\"./ml\": 7341,\n\t\"./ml.js\": 7341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 370,\n\t\"./mr.js\": 370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 1237,\n\t\"./ms-my.js\": 1237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 2126,\n\t\"./mt.js\": 2126,\n\t\"./my\": 6165,\n\t\"./my.js\": 6165,\n\t\"./nb\": 4924,\n\t\"./nb.js\": 4924,\n\t\"./ne\": 6744,\n\t\"./ne.js\": 6744,\n\t\"./nl\": 3901,\n\t\"./nl-be\": 9814,\n\t\"./nl-be.js\": 9814,\n\t\"./nl.js\": 3901,\n\t\"./nn\": 3877,\n\t\"./nn.js\": 3877,\n\t\"./oc-lnc\": 2135,\n\t\"./oc-lnc.js\": 2135,\n\t\"./pa-in\": 5858,\n\t\"./pa-in.js\": 5858,\n\t\"./pl\": 4495,\n\t\"./pl.js\": 4495,\n\t\"./pt\": 9520,\n\t\"./pt-br\": 7971,\n\t\"./pt-br.js\": 7971,\n\t\"./pt.js\": 9520,\n\t\"./ro\": 6459,\n\t\"./ro.js\": 6459,\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793,\n\t\"./sd\": 950,\n\t\"./sd.js\": 950,\n\t\"./se\": 490,\n\t\"./se.js\": 490,\n\t\"./si\": 124,\n\t\"./si.js\": 124,\n\t\"./sk\": 4249,\n\t\"./sk.js\": 4249,\n\t\"./sl\": 4985,\n\t\"./sl.js\": 4985,\n\t\"./sq\": 1104,\n\t\"./sq.js\": 1104,\n\t\"./sr\": 9131,\n\t\"./sr-cyrl\": 9915,\n\t\"./sr-cyrl.js\": 9915,\n\t\"./sr.js\": 9131,\n\t\"./ss\": 5893,\n\t\"./ss.js\": 5893,\n\t\"./sv\": 8760,\n\t\"./sv.js\": 8760,\n\t\"./sw\": 1172,\n\t\"./sw.js\": 1172,\n\t\"./ta\": 7333,\n\t\"./ta.js\": 7333,\n\t\"./te\": 3110,\n\t\"./te.js\": 3110,\n\t\"./tet\": 2095,\n\t\"./tet.js\": 2095,\n\t\"./tg\": 7321,\n\t\"./tg.js\": 7321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 9005,\n\t\"./tk.js\": 9005,\n\t\"./tl-ph\": 5768,\n\t\"./tl-ph.js\": 5768,\n\t\"./tlh\": 9444,\n\t\"./tlh.js\": 9444,\n\t\"./tr\": 2397,\n\t\"./tr.js\": 2397,\n\t\"./tzl\": 8254,\n\t\"./tzl.js\": 8254,\n\t\"./tzm\": 1106,\n\t\"./tzm-latn\": 699,\n\t\"./tzm-latn.js\": 699,\n\t\"./tzm.js\": 1106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 7691,\n\t\"./uk.js\": 7691,\n\t\"./ur\": 3795,\n\t\"./ur.js\": 3795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 588,\n\t\"./uz-latn.js\": 588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 5666,\n\t\"./vi.js\": 5666,\n\t\"./x-pseudo\": 4378,\n\t\"./x-pseudo.js\": 4378,\n\t\"./yo\": 5805,\n\t\"./yo.js\": 5805,\n\t\"./zh-cn\": 3839,\n\t\"./zh-cn.js\": 3839,\n\t\"./zh-hk\": 5726,\n\t\"./zh-hk.js\": 5726,\n\t\"./zh-mo\": 9807,\n\t\"./zh-mo.js\": 9807,\n\t\"./zh-tw\": 4152,\n\t\"./zh-tw.js\": 4152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;","export const ConceptTrue = 'cf82933b-3f3f-45e7-a5ab-5d31aaee3da3';\nexport const ConceptFalse = '488b58ff-64f5-4f8a-8979-fa79940b1594';\nexport const UnspecifiedValue = 'OHRI_UNSPECIFIED';\nexport const encounterRepresentation =\n  'custom:(uuid,encounterDatetime,location:(uuid,name),' +\n  'encounterProviders:(uuid,provider:(uuid,name)),' +\n  'obs:(uuid,obsDatetime,groupMembers,concept:(uuid,name:(uuid,name)),value:(uuid,name:(uuid,name),' +\n  'names:(uuid,conceptNameType,name))))';\n","/**\n * Evaluates whether a value is truthy. This should be used when a string value is expected to parsed into a boolean ie.\n * ```bash\n *  'false' => false\n *  'true' => true\n * ```\n */\nexport function isTrue(value: string | boolean): boolean {\n  if (typeof value == 'boolean') {\n    return value;\n  }\n  if (typeof value == 'string') {\n    return value == 'true';\n  }\n  // TODO: throw an exception?\n  return !!value;\n}\n","import { ConceptFalse, ConceptTrue } from '../constants';\nimport { OHRIFormField, OHRIFormPage, OHRIFormSection } from '../types';\nimport { isEmpty as isValueEmpty } from '../validators/ohri-form-validator';\n\nexport interface FormNode {\n  value: OHRIFormPage | OHRIFormSection | OHRIFormField;\n  type: 'field' | 'page' | 'section';\n}\n\nexport interface ExpressionContext {\n  mode: 'enter' | 'edit' | 'view';\n}\n\nexport function evaluateExpression(\n  expression: string,\n  node: FormNode,\n  allFields: Array<OHRIFormField>,\n  allFieldValues: Record<string, any>,\n  context: ExpressionContext,\n): boolean {\n  const allFieldsKeys = allFields.map(f => f.id);\n  const parts = expression.trim().split(' ');\n  // setup runtime variables\n  const { mode } = context;\n\n  function isEmpty(value) {\n    if (allFieldsKeys.includes(value)) {\n      registerDependency(\n        node,\n        allFields.find(candidate => candidate.id == value),\n      );\n      return isValueEmpty(allFieldValues[value]);\n    }\n    return isValueEmpty(value);\n  }\n\n  function includes(questionId, value) {\n    if (allFieldsKeys.includes(questionId)) {\n      registerDependency(\n        node,\n        allFields.find(candidate => candidate.id === questionId),\n      );\n      return allFieldValues[questionId]?.includes(value);\n    }\n    return false;\n  }\n\n  parts.forEach((part, index) => {\n    if (index % 2 == 0) {\n      if (allFieldsKeys.includes(part)) {\n        const determinant = allFields.find(field => field.id === part);\n        registerDependency(node, determinant);\n        // prep eval variables\n        let determinantValue = allFieldValues[part];\n        if (determinant.questionOptions.rendering == 'toggle') {\n          determinantValue = determinantValue ? ConceptTrue : ConceptFalse;\n        }\n        if (typeof determinantValue == 'string') {\n          determinantValue = `'${determinantValue}'`;\n        }\n        const regx = new RegExp(part, 'g');\n        expression = expression.replace(regx, determinantValue);\n      }\n    }\n  });\n  try {\n    return eval(expression);\n  } catch (error) {\n    console.error(error);\n  }\n  return false;\n}\n\nfunction registerDependency(node: FormNode, determinant: OHRIFormField) {\n  switch (node.type) {\n    case 'page':\n      if (!determinant.pageDependants) {\n        determinant.pageDependants = new Set();\n      }\n      determinant.pageDependants.add(node.value.label);\n      break;\n    case 'section':\n      if (!determinant.sectionDependants) {\n        determinant.sectionDependants = new Set();\n      }\n      determinant.sectionDependants.add(node.value.label);\n    default:\n      if (!determinant.fieldDependants) {\n        determinant.fieldDependants = new Set();\n      }\n      determinant.fieldDependants.add(node.value['id']);\n  }\n}\n","import { FieldValidator, OHRIFormField } from '../types';\nimport { isTrue } from '../utils/boolean-utils';\n\nexport const OHRIFieldValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: any) => {\n    if (field['submission']?.unspecified) {\n      return [];\n    }\n    if (isTrue(field.required) || isTrue(field.unspecified)) {\n      if (isEmpty(value)) {\n        return [{ errCode: 'field.required', errMessage: 'Field is mandatory' }];\n      }\n    }\n    return [];\n  },\n};\n\nexport function isEmpty(value: any): boolean {\n  if (value === undefined || value === null || value === '') {\n    return true;\n  }\n  if (typeof value == 'string' && !value?.trim()) {\n    return true;\n  }\n  if (Array.isArray(value) && !value.length) {\n    return true;\n  }\n  return false;\n}\n","import * as semver from 'semver';\nimport { OHRIFormField } from '../forms/types';\n\nlet defaultFormsRegistry: Record<string, any> = null;\n\nexport interface FormJsonFile {\n  version: string;\n  semanticVersion?: string;\n  json: any;\n}\n\n/**\n * This is a form behaviour property applied on `page` or `section` or `question`\n */\ninterface BehaviourProperty {\n  name: string;\n  type: 'field' | 'section' | 'page' | 'all';\n  value: string;\n}\n\n/**\n * Convinience function for loading form(s) associated to a given package or form version.\n *\n * @param packageName The package associated with the form\n * @param formNamespace The form namespace\n * @param version The form version\n * @param isStrict If `true`, throws error if specified form version wasn't found\n * @param formsRegistry Form registry. (This was added for testing purposes)\n * @returns The form json\n */\nexport function getForm(\n  packageName: string,\n  formNamespace: string,\n  version?: string,\n  isStrict?: boolean,\n  formsRegistry?: any,\n) {\n  const forms = lookupForms(packageName, formNamespace, formsRegistry);\n  let form = null;\n  if (version) {\n    form = getFormByVersion(forms, version, isStrict);\n  }\n  if (!form) {\n    form = getLatestFormVersion(forms);\n  }\n  return loadSubforms(form.json);\n}\n\nexport function loadSubforms(parentForm) {\n  parentForm.pages.forEach(page => {\n    if (page.isSubform && page.subform?.name && page.subform.package) {\n      try {\n        const subform = getForm(page.subform.package, page.subform.name);\n        if (!subform) {\n          console.error(`Form with name \"${page.subform.package}/${page.subform.name}\" was not found in registry.`);\n        }\n        page.subform.form = subform;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  return parentForm;\n}\n\nexport function getLatestFormVersion(forms: FormJsonFile[]) {\n  if (forms.length == 1) {\n    return forms[0];\n  }\n  const latest = semver.maxSatisfying(\n    forms.map(f => f.semanticVersion),\n    '*',\n  );\n  return forms.find(f => f.semanticVersion == latest);\n}\n\nexport function getFormByVersion(forms: FormJsonFile[], requiredVersion: string, isStrict?: boolean) {\n  for (let form of forms) {\n    if (semver.satisfies(form.semanticVersion, requiredVersion)) {\n      return form;\n    }\n  }\n  if (isStrict) {\n    throw new Error(`Couldn't find form with version: ${requiredVersion}`);\n  } else {\n    return null;\n  }\n}\n\nexport function lookupForms(packageName, formNamespace, formsRegistry) {\n  const pkg = formsRegistry ? formsRegistry[packageName] : defaultFormsRegistry[packageName];\n  if (!pkg) {\n    throw Error(`Package with name ${packageName} was not found in registry`);\n  }\n  if (!pkg[formNamespace]) {\n    throw new Error(`Form namespace '${formNamespace}' was not found in forms registry`);\n  }\n  return Object.keys(pkg[formNamespace]).map(formVersion => {\n    return {\n      version: formVersion,\n      semanticVersion: semver.coerce(formVersion).version,\n      json: pkg[formNamespace][formVersion],\n    };\n  });\n}\n\n/**\n * Function parses JSON form input and filters validation behaviours according to a given intent\n *\n * @param {string} intent The specified intent\n * @param {object} originalJson The original JSON form schema object\n * @param parentOverrides An array of behaviour overrides from parent form to be applied to a subform\n * @returns {object} The form json\n */\nexport function applyFormIntent(intent, originalJson, parentOverrides?: Array<BehaviourProperty>) {\n  // Deep-copy original JSON\n  const jsonBuffer = JSON.parse(JSON.stringify(originalJson));\n  // Set the default page based on the current intent\n  jsonBuffer.defaultPage = jsonBuffer.availableIntents?.find(\n    candidate => candidate.intent === intent?.intent || intent,\n  )?.defaultPage;\n\n  // filter form-level markdown behaviour\n  if (jsonBuffer.markdown) {\n    updateMarkdownRequiredBehaviour(jsonBuffer.markdown, intent);\n  }\n\n  // Traverse the property tree with items of interest for validation\n  jsonBuffer.pages.forEach(page => {\n    if (page.isSubform && page.subform?.form) {\n      const behaviourOverrides = [];\n      const targetBehaviour = page.subform.behaviours?.find(behaviour => behaviour.intent == intent?.intent || intent);\n      if (targetBehaviour?.readonly !== undefined || targetBehaviour?.readonly != null) {\n        behaviourOverrides.push({ name: 'readonly', type: 'field', value: targetBehaviour?.readonly });\n      }\n\n      page.subform.form = applyFormIntent(\n        targetBehaviour?.subform_intent || '*',\n        page.subform?.form,\n        behaviourOverrides,\n      );\n    }\n    // TODO: Apply parentOverrides to pages if applicable\n    const pageBehaviour = page.behaviours?.find(behaviour => behaviour.intent === intent?.intent || intent);\n    if (pageBehaviour) {\n      page.hide = pageBehaviour?.hide;\n    } else {\n      const fallBackBehaviour = page.behaviours?.find(behaviour => behaviour.intent === '*');\n      page.hide = fallBackBehaviour?.hide;\n    }\n\n    // filter page-level markdown behaviour\n    if (page.markdown) {\n      updateMarkdownRequiredBehaviour(page.markdown, intent);\n    }\n    page.sections.forEach(section => {\n      // TODO: Apply parentOverrides to sections if applicable\n      const secBehaviour = section.behaviours?.find(behaviour => behaviour.intent === intent?.intent || intent);\n      if (secBehaviour) {\n        section.hide = secBehaviour?.hide;\n      } else {\n        const fallBackBehaviour = section.behaviours?.find(behaviour => behaviour.intent === '*');\n        section.hide = fallBackBehaviour?.hide;\n      }\n\n      // filter section-level markdown behaviour\n      if (section.markdown) {\n        updateMarkdownRequiredBehaviour(section.markdown, intent);\n      }\n\n      section.questions.forEach((question: OHRIFormField) => {\n        if (question['behaviours']) {\n          updateQuestionRequiredBehaviour(question, intent?.intent || intent);\n          parentOverrides\n            ?.filter(override => override.type == 'all' || override.type == 'field')\n            ?.forEach(override => {\n              question[override.name] = override.value;\n            });\n        }\n\n        if (question.questions && question.questions.length) {\n          question.questions.forEach(childQuestion => {\n            updateQuestionRequiredBehaviour(childQuestion, intent?.intent || intent);\n\n            parentOverrides\n              ?.filter(override => override.type == 'all' || override.type == 'field')\n              ?.forEach(override => {\n                childQuestion[override.name] = override.value;\n              });\n          });\n        }\n      });\n    });\n  });\n  return jsonBuffer;\n}\n\n// Helpers\n\nfunction updateQuestionRequiredBehaviour(question, intent: string) {\n  const requiredIntentBehaviour = question.behaviours?.find(behaviour => behaviour.intent === intent);\n\n  const defaultIntentBehaviour = question.behaviours?.find(bevahiour => bevahiour.intent === '*');\n  // If both required and default intents exist, combine them and update to question\n  if (requiredIntentBehaviour || defaultIntentBehaviour) {\n    // Remove the intent name props from each object\n    delete requiredIntentBehaviour?.intent;\n    delete defaultIntentBehaviour?.intent;\n\n    // Combine required and default intents following the rules:\n    // 1. The default intent is applied to all other intents\n    // 2. Intent-specific behaviour overrides default behaviour\n    const combinedBehaviours = Object.assign(defaultIntentBehaviour || {}, requiredIntentBehaviour || {});\n    const defaultValue = combinedBehaviours.defaultValue;\n    if (defaultValue != undefined) {\n      // add the default value under the question options\n      question.questionOptions.defaultValue = defaultValue;\n      // delete it so that it's not added at the root level of the question\n      delete combinedBehaviours.defaultValue;\n    }\n    // Add the combinedBehaviours data to initial question\n    question = Object.assign(question, combinedBehaviours);\n    // Remove behaviours list\n    delete question.behaviours;\n  }\n}\n\nfunction updateMarkdownRequiredBehaviour(markdown, intent) {\n  const requiredIntentBehaviour = markdown.behaviours?.find(behaviour => behaviour.intent === intent);\n  const defaultIntentBehaviour = markdown.behaviours?.find(behaviour => behaviour.intent === '*');\n\n  if (requiredIntentBehaviour && defaultIntentBehaviour) {\n    delete requiredIntentBehaviour.intent;\n    delete defaultIntentBehaviour.intent;\n    const combinedBehaviours = Object.assign(defaultIntentBehaviour, requiredIntentBehaviour);\n\n    markdown = Object.assign(markdown, combinedBehaviours);\n    delete markdown.behaviours;\n  } else if (!requiredIntentBehaviour && defaultIntentBehaviour) {\n    delete defaultIntentBehaviour.intent;\n\n    markdown = Object.assign(markdown, defaultIntentBehaviour);\n    delete markdown.behaviours;\n  }\n}\n\nexport function updateExcludeIntentBehaviour(excludedIntents: Array<string>, originalJson) {\n  originalJson.availableIntents = originalJson.availableIntents.filter(\n    intent => !excludedIntents.includes(intent?.intent || intent),\n  );\n\n  return originalJson;\n}\n\nexport function setDefaultFormsRegistry(registry: Record<string, any>) {\n  defaultFormsRegistry = registry;\n}","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/sass-loader/dist/cjs.js!./ohri-form.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/sass-loader/dist/cjs.js!./ohri-form.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./loading.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport Loading from 'carbon-components-react/es/components/Loading';\nimport styles from './loading.component.scss';\n\nconst LoadingIcon: React.FC = () => (\n  <div className={styles['centerLoadingSVG']}>\n    <Loading description=\"Active loading indicator\" withOverlay={false} small />\n  </div>\n);\n\nexport default LoadingIcon;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./ohri-form-sidebar.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./ohri-form-sidebar.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","export function scrollIntoView(viewId: string) {\n  document.getElementById(viewId).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start',\n    inline: 'start',\n  });\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './ohri-form-sidebar.component.scss';\nimport { scrollIntoView } from '../../../utils/ohri-sidebar';\nimport { Button, Toggle } from 'carbon-components-react';\nimport { isEmpty } from '../../validators/ohri-form-validator';\n\nfunction OHRIFormSidebar({\n  scrollAblePages,\n  selectedPage,\n  mode,\n  onCancel,\n  handleClose,\n  values,\n  setValues,\n  allowUnspecifiedAll,\n  defaultPage,\n}) {\n  const [activeLink, setActiveLink] = useState(selectedPage);\n\n  useEffect(() => {\n    if (defaultPage && [...scrollAblePages].find(({ label, isHidden }) => label === defaultPage && !isHidden)) {\n      scrollIntoView(joinWord(defaultPage));\n    }\n  }, [defaultPage]);\n\n  const joinWord = value => {\n    return value.replace(/\\s/g, '');\n  };\n\n  const unspecifiedFields = useMemo(() => {\n    return (\n      Object.keys(values)\n        .filter(key => key.endsWith('-unspecified'))\n        // find parent control\n        .map(key => key.split('-unspecified')[0])\n        // factor-out those with values\n        .filter(key => isEmpty(values[key]))\n        // return the unspecified control keys\n        .map(key => `${key}-unspecified`)\n    );\n  }, [values]);\n\n  const handleClick = selected => {\n    const activeID = selected.replace(/\\s/g, '');\n    setActiveLink(selected);\n    scrollIntoView(activeID);\n  };\n\n  const markAllAsUnspecified = useCallback(\n    toggled => {\n      if (toggled) {\n        unspecifiedFields.forEach(field => {\n          values[field] = true;\n        });\n      } else {\n        unspecifiedFields.forEach(field => {\n          values[field] = false;\n        });\n      }\n      setValues(values);\n    },\n    [unspecifiedFields],\n  );\n  return (\n    <div className={styles.sidebar}>\n      {[...scrollAblePages].map((page, index) => {\n        return (\n          !page.isHidden && (\n            <div\n              aria-hidden=\"true\"\n              className={joinWord(page.label) === selectedPage ? styles.sidebarSectionActive : styles.sidebarSection}\n              key={index}\n              onClick={() => handleClick(page.label)}>\n              {/* eslint-disable-next-line no-console */}\n              <div className={styles.sidebarSectionLink}>{page.label}</div>\n            </div>\n          )\n        );\n      })}\n      <hr className={styles.sideBarHorizontalLine} />\n      <div className={styles.sidenavActions}>\n        {allowUnspecifiedAll && (\n          <div style={{ marginBottom: '.6rem' }}>\n            <Toggle\n              labelText=\"\"\n              id=\"auto-unspecifier\"\n              labelA=\"Unspecify All\"\n              labelB=\"Revert\"\n              onToggle={markAllAsUnspecified}\n            />\n          </div>\n        )}\n        {mode != 'view' && (\n          <Button style={{ marginBottom: '0.625rem', width: '11rem' }} type=\"submit\">\n            Save\n          </Button>\n        )}\n        <Button\n          style={{ width: '11rem' }}\n          kind=\"tertiary\"\n          onClick={() => {\n            onCancel && onCancel();\n            handleClose && handleClose();\n          }}>\n          {mode == 'view' ? 'Close' : 'Cancel'}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default OHRIFormSidebar;\n","import React from 'react';\nimport { SessionMode } from './types';\n\ntype OHRIFormContextProps = {\n  values: Record<string, any>;\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean) => void;\n  setEncounterLocation: (value: any) => void;\n  obsGroupsToVoid: Array<any>;\n  setObsGroupsToVoid: (value: any) => void;\n  encounterContext: EncounterContext;\n  fields: any;\n};\n\nexport interface EncounterContext {\n  patient: any;\n  encounter: any;\n  location: any;\n  sessionMode: SessionMode;\n  date: Date;\n}\n\nexport const OHRIFormContext = React.createContext<OHRIFormContextProps | undefined>(undefined);\n","import { openmrsFetch, openmrsObservableFetch } from '@openmrs/esm-framework';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport function saveEncounter(abortController: AbortController, payload, encounterUuid?: string) {\n  let url = '/ws/rest/v1/encounter';\n  if (encounterUuid) {\n    url = url + `/${encounterUuid}`;\n  }\n  return openmrsFetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: payload,\n    signal: abortController.signal,\n  });\n}\n\nexport function getConcept(conceptUuid: string, v: string): Observable<any> {\n  return openmrsObservableFetch(`/ws/rest/v1/concept/${conceptUuid}?v=${v}`).pipe(map(response => response['data']));\n}\n\nexport function getLocationsByTag(tag: string): Observable<{ uuid: string; display: string }[]> {\n  return openmrsObservableFetch(`/ws/rest/v1/location?tag=${tag}&v=custom:(uuid,display)`).pipe(\n    map(({ data }) => data['results']),\n  );\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./_input.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./_input.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Checkbox } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { OHRIFormField } from '../../../types';\nimport { isTrue } from '../../../utils/boolean-utils';\n\nexport const OHRIUnspecified: React.FC<{\n  question: OHRIFormField;\n}> = ({ question }) => {\n  const [field, meta] = useField(`${question.id}-unspecified`);\n  const { setFieldValue } = React.useContext(OHRIFormContext);\n  const [previouslyUnspecified, setPreviouslyUnspecified] = useState(false);\n\n  useEffect(() => {\n    if (field.value) {\n      setPreviouslyUnspecified(true);\n      question['submission'] = {\n        unspecified: true,\n        errors: [],\n      };\n      let emptyValue = null;\n      switch (question.questionOptions.rendering) {\n        case 'date':\n          emptyValue = '';\n          break;\n        case 'checkbox':\n          emptyValue = [];\n      }\n      setFieldValue(question.id, emptyValue);\n      question.value = null;\n    } else if (previouslyUnspecified && !question.value) {\n      question['submission'] = {\n        unspecified: false,\n        errors: OHRIFieldValidator.validate(question, null),\n      };\n    }\n  }, [field.value]);\n\n  useEffect(() => {\n    if (question.value) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n  }, [question.value]);\n\n  const handleOnChange = useCallback(value => {\n    setFieldValue(`${question.id}-unspecified`, value);\n  }, []);\n\n  return (\n    !question.isHidden &&\n    !isTrue(question.readonly) && (\n      <div className={styles.unspecified}>\n        <Checkbox\n          id={`${question.id}-unspcified`}\n          labelText=\"Unspecified\"\n          value=\"Unspecified\"\n          onChange={handleOnChange}\n          checked={field.value}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./ohri-form-section.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./ohri-form-section.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useState } from 'react';\nimport styles from './ohri-form-section.scss';\nimport { getFieldComponent, getHandler } from '../../registry/registry';\nimport { OHRIUnspecified } from '../inputs/unspecified/ohri-unspecified.component';\nimport { OHRIFormField } from '../../types';\nimport { isTrue } from '../../utils/boolean-utils';\n\nexport const getFieldControl = (question: OHRIFormField) => {\n  // Check if a concept wasn't provided\n  if (question.type == 'obs' && !question.questionOptions.concept) {\n    // Disable the control\n    question.disabled = true;\n    // Since we don't have a concept, just render a text input\n    return getFieldComponent('text');\n  }\n  return getFieldComponent(question.questionOptions.rendering);\n};\n\nexport const supportsUnspecified = question => {\n  return (\n    isTrue(question.unspecified) &&\n    question.questionOptions.rendering != 'toggle' &&\n    question.questionOptions.rendering != 'encounter-location'\n  );\n};\nconst OHRIFormSection = ({ fields, onFieldChange, sectionTitle, showTitle }) => {\n  return (\n    <div className={styles.sectionContainer}>\n      {fields.map((value, index) => {\n        const component = getFieldControl(value);\n        if (component) {\n          const qnFragment = React.createElement(component, {\n            question: value,\n            onChange: onFieldChange,\n            key: index,\n            handler: getHandler(value.type),\n          });\n\n          return supportsUnspecified(value) && value.questionOptions.rendering != 'group' ? (\n            <div className={styles.questionOverrides} key={index}>\n              {qnFragment}\n              <OHRIUnspecified question={value} />\n            </div>\n          ) : (\n            <div className={styles.questionOverrides} key={index}>\n              {qnFragment}\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default OHRIFormSection;\n","import { Column, Row } from 'carbon-components-react/lib/components/Grid';\nimport React from 'react';\nimport { getFieldComponent, getHandler } from '../../registry/registry';\nimport { OHRIFormFieldProps } from '../../types';\nimport { OHRIUnspecified } from '../inputs/unspecified/ohri-unspecified.component';\nimport styles from '../inputs/_input.scss';\nimport { getFieldControl, supportsUnspecified } from '../section/ohri-form-section.component';\nexport interface ObsGroupProps extends OHRIFormFieldProps {\n  deleteControl?: any;\n}\n\nexport const OHRIObsGroup: React.FC<ObsGroupProps> = ({ question, onChange, deleteControl }) => {\n  const groupContent = question.questions\n    .filter(groupMember => !groupMember.isHidden)\n    .map((groupMember, index) => {\n      const component = getFieldControl(groupMember);\n      if (component) {\n        const qnFragment = React.createElement(component, {\n          question: groupMember,\n          onChange: onChange,\n          key: index,\n          handler: getHandler(groupMember.type),\n        });\n        return (\n          <Column className={styles.obsGroupColumn}>\n            {supportsUnspecified(groupMember) ? (\n              <>\n                {qnFragment}\n                <OHRIUnspecified question={groupMember} />\n              </>\n            ) : (\n              qnFragment\n            )}\n          </Column>\n        );\n      }\n    });\n  if (groupContent) {\n    groupContent.push(deleteControl);\n  }\n  return <Row>{groupContent}</Row>;\n};\n","import { TooltipDefinition } from 'carbon-components-react';\nimport React from 'react';\nimport styles from '../inputs/_input.scss';\n\nexport const OHRILabel: React.FC<{ value: string; tooltipText?: string }> = ({ value, tooltipText }) => {\n  return (\n    <div className={styles.ohriLabel}>\n      <TooltipDefinition direction=\"bottom\" tabIndex={0} tooltipText={tooltipText}>\n        <span className=\"bx--label\">{value}</span>\n      </TooltipDefinition>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const OHRIValueEmpty = () => {\n  return (\n    <div>\n      <span style={{ fontSize: '.875rem', color: '#c6c6c6' }}>(Blank)</span>\n    </div>\n  );\n};\n\nexport const OHRIValueDisplay = ({ value }) => {\n  return (\n    <div>\n      <span style={{ fontSize: '.875rem' }}>{value}</span>\n    </div>\n  );\n};\n","import { fetchConceptNameByUuid } from '../../api/api';\nimport { ConceptFalse, ConceptTrue } from '../constants';\nimport { EncounterContext } from '../ohri-form-context';\nimport { getHandler } from '../registry/registry';\nimport { OHRIFormField, OHRIFormSection, SubmissionHandler } from '../types';\nimport { OHRIDefaultFieldValueValidator } from '../validators/default-value-validator';\nimport { isEmpty } from '../validators/ohri-form-validator';\n\nexport function cascadeVisibityToChildFields(\n  visibility: boolean,\n  section: OHRIFormSection,\n  allFields: Array<OHRIFormField>,\n) {\n  const candidateIds = section.questions.map(q => q.id);\n  allFields\n    .filter(field => candidateIds.includes(field.id))\n    .forEach(field => {\n      field.isParentHidden = visibility;\n    });\n}\n\nexport function inferInitialValueFromDefaultFieldValue(\n  field: OHRIFormField,\n  context: EncounterContext,\n  handler: SubmissionHandler,\n) {\n  if (field.questionOptions.rendering == 'toggle') {\n    return field.questionOptions.defaultValue == ConceptTrue;\n  }\n  // validate default value\n  if (!OHRIDefaultFieldValueValidator.validate(field, field.questionOptions.defaultValue).length) {\n    // construct observation\n    handler.handleFieldSubmission(field, field.questionOptions.defaultValue, context);\n    return field.questionOptions.defaultValue;\n  }\n}\n\nexport function getConceptNameAndUUID(conceptUuid: string) {\n  return fetchConceptNameByUuid(conceptUuid).then(conceptName => {\n    return `Concept Name: ${conceptName} \\n UUID: ${conceptUuid}`;\n  });\n}\n","import moment from 'moment';\nimport { FieldValidator, OHRIFormField } from '../types';\n\nexport const OHRIDefaultFieldValueValidator: FieldValidator = {\n  validate: (field: OHRIFormField, value: any) => {\n    const codedTypes = ['radio', 'checkbox', 'select', 'content-switcher'];\n    if (codedTypes.includes(field.questionOptions.rendering)) {\n      // check whether value exists in answers\n      if (!field.questionOptions.answers?.find(answer => answer.concept == value)) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: 'Value not found in coded answers list' }];\n      }\n    }\n    if (field.questionOptions.rendering == 'date') {\n      // Check if value is a valid date value\n      if (!moment(value, moment.ISO_8601, true).isValid()) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: `Invalid date value: '${value}'` }];\n      }\n    }\n    if (field.questionOptions.rendering == 'number') {\n      if (isNaN(value)) {\n        return [{ errCode: 'invalid.defaultValue', errMessage: `Invalid numerical  value: '${value}'` }];\n      }\n    }\n    return [];\n  },\n};\n","import { openmrsFetch } from '@openmrs/esm-framework';\n\nexport function fetchConceptNameByUuid(conceptUuid: string) {\n  return openmrsFetch(`/ws/rest/v1/concept/${conceptUuid}/name?limit=1`).then(({ data }) => {\n    if (data.results.length) {\n      const concept = data.results[data.results.length - 1];\n      return concept.display;\n    }\n  });\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { FormGroup, ContentSwitcher, Switch } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nexport const OHRIContentSwitcher: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, values } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value?.name);\n    setErrors(OHRIFieldValidator.validate(question, value));\n    onChange(question.id, value?.name);\n    question.value = handler.handleFieldSubmission(question, value?.name, encounterContext);\n  };\n  const selectedIndex = useMemo(\n    () => question.questionOptions.answers.findIndex(option => option.concept == field.value),\n    [field.value],\n  );\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.textContainer}>\n        <FormGroup legendText={question.label} className={errors.length ? styles.errorLegend : ''}>\n          <ContentSwitcher onChange={handleChange} selectedIndex={selectedIndex} className={styles.selectedOption}>\n            {question.questionOptions.answers.map((option, index) => (\n              <Switch\n                className={selectedIndex === index ? styles.switchOverrides : styles.switchOverridesNone}\n                name={option.concept || option.value}\n                text={option.label}\n                key={index}\n                disabled={question.disabled}\n              />\n            ))}\n          </ContentSwitcher>\n        </FormGroup>\n      </div>\n    )\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { DatePicker, DatePickerInput } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIDate: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const onDateChange = ([date]) => {\n    const refinedDate = date instanceof Date ? new Date(date.getTime() - date.getTimezoneOffset() * 60000) : date;\n    setFieldValue(question.id, refinedDate);\n    setErrors(OHRIFieldValidator.validate(question, refinedDate));\n    onChange(question.id, refinedDate);\n    question.value = handler.handleFieldSubmission(question, refinedDate, encounterContext);\n  };\n  const { placeHolder, carbonDateformat } = useMemo(() => {\n    const formatObj = new Intl.DateTimeFormat(window.navigator.language).formatToParts(new Date());\n    const placeHolder = formatObj\n      .map(obj => {\n        switch (obj.type) {\n          case 'day':\n            return 'dd';\n          case 'month':\n            return 'mm';\n          case 'year':\n            return 'yyyy';\n          default:\n            return obj.value;\n        }\n      })\n      .join('');\n    const carbonDateformat = formatObj\n      .map(obj => {\n        switch (obj.type) {\n          case 'day':\n            return 'd';\n          case 'month':\n            return 'm';\n          case 'year':\n            return 'Y';\n          default:\n            return obj.value;\n        }\n      })\n      .join('');\n    return { placeHolder: placeHolder, carbonDateformat: carbonDateformat };\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? (\n        <OHRIValueDisplay\n          value={field.value instanceof Date ? field.value.toLocaleDateString(window.navigator.language) : field.value}\n        />\n      ) : (\n        <OHRIValueEmpty />\n      )}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <DatePicker\n          datePickerType=\"single\"\n          onChange={onDateChange}\n          className={`${styles.datePickerOverrides} ${errors.length ? styles.errorLabel : ''} ${\n            question.disabled || isTrue(question.readonly) ? styles.disabledLabelOverrides : ''\n          }`}\n          dateFormat={carbonDateformat}>\n          <DatePickerInput\n            id={question.id}\n            placeholder={placeHolder}\n            labelText={question.label}\n            value={\n              field.value instanceof Date ? field.value.toLocaleDateString(window.navigator.language) : field.value\n            }\n            disabled={question.disabled}\n          />\n        </DatePicker>\n      </div>\n    )\n  );\n};\n\nexport default OHRIDate;\n","import React, { useEffect, useState } from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { OHRIFormField } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { getLocationsByTag } from '../../../ohri-form.resource';\nimport { createErrorHandler } from '@openmrs/esm-framework';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueDisplay, OHRIValueEmpty } from '../../value/ohri-value.component';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nexport const OHRIEncounterLocationPicker: React.FC<{ question: OHRIFormField; onChange: any }> = ({ question }) => {\n  const [field, meta] = useField(question.id);\n  const { setEncounterLocation, setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [locations, setLocations] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question.questionOptions.locationTag) {\n      getLocationsByTag(\n        question.questionOptions.locationTag\n          .trim()\n          .split(' ')\n          .join('%20'),\n      ).subscribe(\n        results => setLocations(results),\n        error => createErrorHandler(),\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={field.value.display} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formInputField}>\n        <Dropdown\n          id={question.id}\n          titleText={question.label}\n          label=\"Choose location\"\n          items={locations}\n          itemToString={item => item.display}\n          selectedItem={field.value}\n          onChange={({ selectedItem }) => {\n            setFieldValue(question.id, selectedItem);\n            setEncounterLocation(selectedItem);\n          }}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n","import { FormGroup, ListItem, MultiSelect, UnorderedList } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty } from '../../value/ohri-value.component';\nimport { useTranslation } from 'react-i18next';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nexport const OHRIMultiSelect: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const { t } = useTranslation();\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [counter, setCounter] = useState(0);\n  const [touched, setTouched] = useState(false);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    // Carbon's MultiSelect has issues related to not updating the component based on the `initialSelectedItems` prop\n    // this is an intermittent issue. As a temporary solution, were are forcing the component to re-render\n    if (field.value && field.value.length == 0) {\n      // chances are high the value was cleared\n      // force the Multiselect component to be re-mounted\n      setCounter(counter + 1);\n    } else if (!touched && question.value) {\n      setCounter(counter + 1);\n    }\n  }, [field.value]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const questionItems = question.questionOptions.answers.map((option, index) => ({\n    id: `${question.id}-${option.concept}`,\n    concept: option.concept,\n    label: option.label,\n    key: index,\n  }));\n\n  const initiallySelectedQuestionItems = [];\n  questionItems.forEach(item => {\n    if (field.value?.includes(item.concept)) {\n      initiallySelectedQuestionItems.push(item);\n    }\n  });\n\n  const handleSelectItemsChange = ({ selectedItems }) => {\n    setTouched(true);\n    const value = selectedItems.map(selectedItem => selectedItem.concept);\n    setFieldValue(question.id, value);\n    onChange(question.id, value);\n    setErrors(OHRIFieldValidator.validate(question, selectedItems));\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value?.length ? (\n        <UnorderedList style={{ marginLeft: '1rem' }}>\n          {handler.getDisplayValue(question, field.value).map(displayValue => (\n            <ListItem>{displayValue}</ListItem>\n          ))}\n        </UnorderedList>\n      ) : (\n        <OHRIValueEmpty />\n      )}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div\n        className={\n          errors.length ? `${styles.multiselectOverride} ${styles.errorLabel}` : `${styles.multiselectOverride}`\n        }>\n        <MultiSelect.Filterable\n          placeholder={t('filterItemsInMultiselect', 'Search...')}\n          onChange={handleSelectItemsChange}\n          id={question.label}\n          items={questionItems}\n          initialSelectedItems={initiallySelectedQuestionItems}\n          label={''}\n          titleText={question.label}\n          key={counter}\n          itemToString={item => (item ? item.label : ' ')}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NumberInput } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport styles from '../_input.scss';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\n\nconst OHRINumber: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    setErrors(OHRIFieldValidator.validate(question, field.value));\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} />\n      {field.value ? <OHRIValueDisplay value={field.value} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.numberInputWrapper}>\n        <NumberInput\n          {...field}\n          id={question.id}\n          invalidText=\"Number is not valid\"\n          label={question.label}\n          max={question.questionOptions.max || undefined}\n          min={question.questionOptions.min || undefined}\n          name={question.id}\n          value={field.value || ''}\n          onFocus={() => setPreviousValue(field.value)}\n          allowEmpty={true}\n          size=\"xl\"\n          className={errors.length ? styles.errorLabel : ''}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n\nexport default OHRINumber;\n","import React, { useEffect, useState } from 'react';\nimport { FormGroup, RadioButtonGroup, RadioButton } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport styles from '../_input.scss';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIRadio: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    setErrors(OHRIFieldValidator.validate(question, value));\n    onChange(question.id, value);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <FormGroup\n        style={{ paddingBottom: '1rem' }}\n        legendText={question.label}\n        className={errors.length ? styles.errorLegend : ''}\n        disabled={question.disabled}>\n        <RadioButtonGroup\n          defaultSelected=\"default-selected\"\n          name={question.id}\n          valueSelected={field.value}\n          onChange={handleChange}\n          orientation=\"vertical\">\n          {question.questionOptions.answers.map((answer, index) => {\n            return (\n              <RadioButton\n                id={`${question.id}-${answer.label}`}\n                labelText={answer.label}\n                value={answer.concept}\n                key={index}\n              />\n            );\n          })}\n        </RadioButtonGroup>\n      </FormGroup>\n    )\n  );\n};\n\nexport default OHRIRadio;\n","import React, { useEffect, useState } from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { OHRIFormFieldProps } from '../../../types';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport styles from '../_input.scss';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIDropdown: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [items, setItems] = React.useState([]);\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    setErrors(OHRIFieldValidator.validate(question, value));\n    onChange(question.id, value);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  const itemToString = item => {\n    const answer = question.questionOptions.answers.find(opt => (opt.value ? opt.value == item : opt.concept == item));\n    return answer?.label;\n  };\n  useEffect(() => {\n    setItems(question.questionOptions.answers.map(item => item.value || item.concept));\n  }, [question.questionOptions.answers]);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formInputField}>\n        <div className={errors.length ? styles.errorLabel : styles.dropDownOverride}>\n          <Dropdown\n            id={question.id}\n            titleText={question.label}\n            label=\"Choose an option\"\n            items={items}\n            itemToString={itemToString}\n            selectedItem={field.value}\n            onChange={({ selectedItem }) => handleChange(selectedItem)}\n            disabled={question.disabled}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRIDropdown;\n","import React, { useEffect, useState } from 'react';\nimport { TextArea } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRITextArea: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    setErrors(OHRIFieldValidator.validate(question, field.value));\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={field.value} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <div className={errors.length ? styles.errorLabel : ''}>\n          <TextArea\n            {...field}\n            id={question.id}\n            labelText={question.label}\n            name={question.id}\n            value={field.value || ''}\n            className={styles.textInputOverrides}\n            onFocus={() => setPreviousValue(field.value)}\n            rows={question.questionOptions.rows || 4}\n            disabled={question.disabled}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRITextArea;\n","import React, { useEffect, useState } from 'react';\nimport { TextInput } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { OHRIFieldValidator } from '../../../validators/ohri-form-validator';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIText: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext } = React.useContext(OHRIFormContext);\n  const [previousValue, setPreviousValue] = useState();\n  const [errors, setErrors] = useState([]);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  useEffect(() => {\n    if (question['submission']?.errors) {\n      setErrors(question['submission']?.errors);\n    }\n  }, [question['submission']]);\n\n  field.onBlur = () => {\n    if (field.value && question.unspecified) {\n      setFieldValue(`${question.id}-unspecified`, false);\n    }\n    setErrors(OHRIFieldValidator.validate(question, field.value));\n    if (previousValue !== field.value) {\n      onChange(question.id, field.value);\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  };\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={field.value} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <div className={errors.length ? styles.errorLabel : ''}>\n          <TextInput\n            {...field}\n            id={question.id}\n            className={styles.textInputOverrides}\n            labelText={question.label}\n            name={question.id}\n            value={field.value || ''}\n            onFocus={() => setPreviousValue(field.value)}\n            disabled={question.disabled}\n          />\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OHRIText;\n","import React, { useEffect, useState } from 'react';\nimport { Toggle } from 'carbon-components-react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport styles from '../_input.scss';\nimport { useField } from 'formik';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRILabel } from '../../label/ohri-label.component';\nimport { OHRIValueEmpty, OHRIValueDisplay } from '../../value/ohri-value.component';\nimport { isTrue } from '../../../utils/boolean-utils';\nimport { getConceptNameAndUUID } from '../../../utils/ohri-form-helper';\n\nconst OHRIToggle: React.FC<OHRIFormFieldProps> = ({ question, onChange, handler }) => {\n  const [field, meta] = useField(question.id);\n  const { setFieldValue, encounterContext, values } = React.useContext(OHRIFormContext);\n  const [conceptName, setConceptName] = useState('Loading...');\n\n  const handleChange = value => {\n    setFieldValue(question.id, value);\n    onChange(question.id, value);\n    question.value = handler.handleFieldSubmission(question, value, encounterContext);\n  };\n\n  useEffect(() => {\n    // The toogle input doesn't support blank values\n    // by default, the value should be false\n    if (!question.value && encounterContext.sessionMode == 'enter') {\n      question.value = handler.handleFieldSubmission(question, field.value, encounterContext);\n    }\n  }, []);\n\n  useEffect(() => {\n    getConceptNameAndUUID(question.questionOptions.concept).then(conceptTooltip => {\n      setConceptName(conceptTooltip);\n    });\n  }, [conceptName]);\n\n  return encounterContext.sessionMode == 'view' || isTrue(question.readonly) ? (\n    <div className={styles.formField}>\n      <OHRILabel value={question.label} tooltipText={conceptName} />\n      {field.value ? <OHRIValueDisplay value={handler.getDisplayValue(question, field.value)} /> : <OHRIValueEmpty />}\n    </div>\n  ) : (\n    !question.isHidden && (\n      <div className={styles.formField}>\n        <Toggle\n          labelText={question.label}\n          id={question.id}\n          labelA={question.questionOptions.toggleOptions.labelFalse}\n          labelB={question.questionOptions.toggleOptions.labelTrue}\n          onToggle={handleChange}\n          toggled={!!field.value}\n          disabled={question.disabled}\n        />\n      </div>\n    )\n  );\n};\n\nexport default OHRIToggle;\n","import { ButtonSet, Column, FormGroup } from 'carbon-components-react';\nimport Button from 'carbon-components-react/lib/components/Button';\nimport Row from 'carbon-components-react/lib/components/Grid/Row';\nimport { useFormikContext } from 'formik';\nimport { cloneDeep } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ConceptTrue } from '../../constants';\nimport { OHRIFormContext } from '../../ohri-form-context';\nimport { getConcept } from '../../ohri-form.resource';\nimport { getHandler } from '../../registry/registry';\nimport { OHRIFormField, OHRIFormFieldProps } from '../../types';\nimport { OHRIObsGroup } from '../group/ohri-obs-group.component';\nimport { TrashCan32, Add16 } from '@carbon/icons-react';\nimport { useLayoutType } from '@openmrs/esm-framework';\nimport styles from '../inputs/_input.scss';\n\nexport const getInitialValueFromObs = (field: OHRIFormField, obsGroup: any) => {\n  const rendering = field.questionOptions.rendering;\n  const obs = obsGroup.groupMembers.filter(o => o.concept.uuid == field.questionOptions.concept);\n  if (obs.length) {\n    field.value = obs[0];\n    if (rendering == 'radio' || rendering == 'content-switcher') {\n      getConcept(field.questionOptions.concept, 'custom:(uuid,display,datatype:(uuid,display,name))').subscribe(\n        result => {\n          if (result.datatype.name == 'Boolean') {\n            field.value.value = obs[0].value.uuid;\n          }\n        },\n      );\n    }\n    if (typeof obs[0].value == 'string' || typeof obs[0].value == 'number') {\n      return field.questionOptions.rendering == 'date' ? moment(obs[0].value).toDate() : obs[0].value;\n    }\n    if (field.questionOptions.rendering == 'checkbox') {\n      field.value = obs;\n      return field.value.map(o => o.value.uuid);\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      field.value.value = obs[0].value.uuid;\n      return obs[0].value == ConceptTrue;\n    }\n    return obs[0].value?.uuid;\n  }\n  return '';\n};\n\nexport const OHRIRepeat: React.FC<OHRIFormFieldProps> = ({ question, onChange }) => {\n  const [questions, setQuestions] = useState([question]);\n  const { fields, encounterContext, obsGroupsToVoid } = React.useContext(OHRIFormContext);\n  const { values, setValues } = useFormikContext();\n  const [counter, setCounter] = useState(0);\n  const viewPort = useLayoutType();\n\n  const rowWidth = useMemo(() => {\n    if (viewPort == 'phone' || viewPort == 'tablet') {\n      return '50rem';\n    }\n    return '90rem';\n  }, [viewPort]);\n\n  useEffect(() => {\n    if (encounterContext.encounter && !counter) {\n      const alreadyMappedGroup = question.value?.uuid;\n      const unMappedObsGroups = encounterContext.encounter.obs.filter(\n        obs => obs.concept.uuid === question.questionOptions.concept && obs.uuid != alreadyMappedGroup,\n      );\n      // create new fields and map them values\n      let tempCounter = counter;\n      unMappedObsGroups.forEach(obsGroup => {\n        tempCounter = tempCounter + 1;\n        handleAdd(tempCounter, obsGroup);\n      });\n      setCounter(tempCounter);\n    }\n  }, [values]);\n\n  useEffect(() => {\n    questions[0] = question;\n    setQuestions([...questions]);\n  }, [question]);\n\n  const handleAdd = (count: number, obsGroup?: any) => {\n    const idSuffix = count;\n    const next = cloneDeep(question);\n    next.value = obsGroup;\n    next.id = `${next.id}-${idSuffix}`;\n    next.questions.forEach(q => {\n      q.id = `${q.id}-${idSuffix}`;\n      q['groupId'] = next.id;\n      q.value = null;\n      let initialValue = obsGroup ? getInitialValueFromObs(q, obsGroup) : null;\n      values[`${q.id}`] = initialValue ? initialValue : q.questionOptions.rendering == 'checkbox' ? [] : '';\n      fields.push(q);\n    });\n    setValues(values);\n    fields.push(next);\n    questions.push(next);\n    setQuestions(questions);\n  };\n\n  const removeQuestion = (question: OHRIFormField) => {\n    if (question.value && question.value.uuid) {\n      // obs group should be voided\n      question.value['voided'] = true;\n      delete question.value.value;\n      obsGroupsToVoid.push(question.value);\n    }\n    setQuestions(questions.filter(q => q.id !== question.id));\n    // cleanup\n    const dueFields = [question.id, ...question.questions.map(q => q.id)];\n    dueFields.forEach(field => {\n      const index = fields.findIndex(f => f.id === field);\n      fields.splice(index, 1);\n      delete values[field];\n    });\n  };\n  const nodes = questions.map((question, index) => {\n    const deleteControl =\n      index !== 0 ? (\n        <Column style={{ paddingTop: '1.2rem', marginLeft: '.5rem' }}>\n          <Button\n            renderIcon={TrashCan32}\n            kind=\"danger--tertiary\"\n            onClick={() => removeQuestion(question)}\n            hasIconOnly\n          />\n        </Column>\n      ) : null;\n    return (\n      <>\n        <Row style={{ margin: '0', marginBottom: '1rem', marginTop: '1rem', width: rowWidth }}>\n          <OHRIObsGroup question={question} onChange={onChange} handler={getHandler('obsGroup')} />\n          {deleteControl}\n        </Row>\n      </>\n    );\n  });\n\n  nodes.push(\n    <Row>\n      <Column>\n        <Button\n          renderIcon={Add16}\n          kind=\"ghost\"\n          onClick={() => {\n            const nextCount = counter + 1;\n            handleAdd(nextCount, null);\n            setCounter(nextCount);\n          }}>\n          {question.questionOptions.repeatOptions?.addText || 'Add'}\n        </Button>\n      </Column>\n    </Row>,\n  );\n  return (\n    !question.isHidden && (\n      <div style={{ marginTop: '0.65rem', marginBottom: '2rem' }}>\n        <FormGroup legendText={question.label}>{nodes}</FormGroup>\n      </div>\n    )\n  );\n};\n","import moment from 'moment';\nimport { useContext } from 'react';\nimport { ConceptFalse, ConceptTrue } from '../constants';\nimport { EncounterContext, OHRIFormContext } from '../ohri-form-context';\nimport { getConcept } from '../ohri-form.resource';\nimport { OHRIFormField, SubmissionHandler } from '../types';\nimport { OHRIDefaultFieldValueValidator } from '../validators/default-value-validator';\nimport { isEmpty } from '../validators/ohri-form-validator';\n\n/**\n * Obs handler\n */\nexport const ObsSubmissionHandler: SubmissionHandler = {\n  handleFieldSubmission: (field: OHRIFormField, value: any, context: EncounterContext) => {\n    if (field.questionOptions.rendering == 'checkbox') {\n      return multiSelectObsHandler(field, value, context);\n    }\n    if (field.questionOptions.rendering == 'toggle') {\n      return constructObs(value, context, field);\n    }\n    if (field.value) {\n      if (context.sessionMode == 'edit' && !value) {\n        field.value.voided = true;\n      } else if (!value) {\n        field.value = undefined;\n      } else {\n        if (field.questionOptions.rendering == 'date') {\n          field.value.value = moment(value).format('YYYY-MM-DD HH:mm');\n        } else {\n          field.value.value = value;\n        }\n        field.value.voided = false;\n      }\n    } else {\n      if (field.questionOptions.rendering == 'date') {\n        field.value = constructObs(moment(value).format('YYYY-MM-DD HH:mm'), context, field);\n        return field.value;\n      }\n      field.value = constructObs(value, context, field);\n    }\n    return field.value;\n  },\n  getInitialValue: (encounter: any, field: OHRIFormField, allFormFields: Array<OHRIFormField>) => {\n    let obs = encounter.obs.find(o => o.concept.uuid == field.questionOptions.concept);\n    let parentField = null;\n    let obsGroup = null;\n    // If this field is a group member and the obs was picked from the encounters's top obs leaves,\n    // chances are high this obs wasn't captured as part of the obs group. return empty.\n    // this should be solved by tracking obs through `formFieldNamespace`.\n    if (obs && field['groupId']) {\n      return '';\n    }\n    if (!obs && field['groupId']) {\n      parentField = allFormFields.find(f => f.id == field['groupId']);\n      obsGroup = encounter.obs.find(o => o.concept.uuid == parentField.questionOptions.concept);\n      if (obsGroup) {\n        parentField.value = obsGroup;\n        obs = obsGroup.groupMembers?.find(o => o.concept.uuid == field.questionOptions.concept);\n      }\n    }\n    if (obs) {\n      const rendering = field.questionOptions.rendering;\n      field.value = obs;\n      if (rendering == 'radio' || rendering == 'content-switcher') {\n        getConcept(field.questionOptions.concept, 'custom:(uuid,display,datatype:(uuid,display,name))').subscribe(\n          result => {\n            if (result.datatype.name == 'Boolean') {\n              field.value.value = obs.value.uuid;\n            }\n          },\n        );\n      }\n      if (typeof obs.value == 'string' || typeof obs.value == 'number') {\n        if (field.questionOptions.rendering == 'date') {\n          field.value.value = moment(field.value.value).format('YYYY-MM-DD HH:mm');\n          return moment(obs.value).toDate();\n        }\n        return obs.value;\n      }\n      if (field.questionOptions.rendering == 'checkbox') {\n        field.value = encounter.obs.filter(o => o.concept.uuid == field.questionOptions.concept);\n        if (!field.value.length && field['groupId']) {\n          field.value = obsGroup.groupMembers.filter(o => o.concept.uuid == field.questionOptions.concept);\n        }\n        return field.value.map(o => o.value.uuid);\n      }\n      if (field.questionOptions.rendering == 'toggle') {\n        field.value.value = obs.value.uuid;\n        return obs.value == ConceptTrue;\n      }\n      return obs.value?.uuid;\n    }\n    return '';\n  },\n  getDisplayValue: (field: OHRIFormField, value: any) => {\n    const rendering = field.questionOptions.rendering;\n    if (!field.value) {\n      return null;\n    }\n    if (field.questionOptions.rendering == 'checkbox') {\n      return value.map(\n        chosenOption => field.questionOptions.answers.find(option => option.concept == chosenOption).label,\n      );\n    }\n    if (rendering == 'content-switcher' || rendering == 'select' || rendering == 'toggle') {\n      const concept = typeof field.value.value === 'object' ? field.value.value.uuid : field.value.value;\n      return field.questionOptions.answers.find(option => option.concept == concept).label;\n    }\n    if (rendering == 'radio') {\n      return field.questionOptions.answers.find(option => option.concept == value).label;\n    }\n    return value;\n  },\n};\n\n/**\n * Encounter location handler\n */\nexport const EncounterLocationSubmissionHandler: SubmissionHandler = {\n  handleFieldSubmission: (field: OHRIFormField, value: any, context: EncounterContext) => {\n    return null;\n  },\n  getInitialValue: (encounter: any, field: OHRIFormField) => {\n    return {\n      display: encounter.location.name,\n      uuid: encounter.location.uuid,\n    };\n  },\n  getDisplayValue: (field: OHRIFormField, value) => {\n    return value.display;\n  },\n};\n\n///////////////////////////////\n// Helpers\n//////////////////////////////\n\nconst constructObs = (value: any, context: EncounterContext, field: OHRIFormField) => {\n  return {\n    person: context.patient.id,\n    obsDatetime: context.date,\n    concept: field.questionOptions.concept,\n    location: context.location,\n    order: null,\n    groupMembers: [],\n    voided: false,\n    // formFieldNamespace: 'ohri-forms',\n    // formFieldPath: 'field-id',\n    value: value,\n  };\n};\n\nconst multiSelectObsHandler = (field: OHRIFormField, values: Array<string>, context: EncounterContext) => {\n  if (!field.value) {\n    field.value = [];\n  }\n  values.forEach(value => {\n    const obs = field.value.find(o => {\n      if (typeof o.value == 'string') {\n        return o.value == value;\n      }\n      return o.value.uuid == value;\n    });\n    if (obs && obs.voided) {\n      obs.voided = false;\n    } else {\n      obs || field.value.push(constructObs(value, context, field));\n    }\n  });\n\n  // void or remove unchecked options\n  field.questionOptions.answers\n    .filter(opt => !values.some(v => v == opt.concept))\n    .forEach(opt => {\n      const observations = field.value.filter(o => {\n        if (typeof o.value == 'string') {\n          return o.value == opt.concept;\n        }\n        return o.value.uuid == opt.concept;\n      });\n      if (!observations.length) {\n        return;\n      }\n      observations.forEach(obs => {\n        if (context.sessionMode == 'edit' && obs.uuid) {\n          obs.voided = true;\n        } else {\n          field.value = field.value.filter(o => o.value !== opt.concept);\n        }\n      });\n    });\n  return field.value;\n};\n","import { OHRIObsGroup } from '../components/group/ohri-obs-group.component';\nimport { OHRIContentSwitcher } from '../components/inputs/content-switcher/ohri-content-switcher.component';\nimport OHRIDate from '../components/inputs/date/ohri-date.component';\nimport { OHRIEncounterLocationPicker } from '../components/inputs/location/ohri-encounter-location.component';\nimport { OHRIMultiSelect } from '../components/inputs/multi-select/ohri-multi-select.component';\nimport OHRINumber from '../components/inputs/number/ohri-number.component';\nimport OHRIRadio from '../components/inputs/radio/ohri-radio.component';\nimport OHRIDropdown from '../components/inputs/select/ohri-dropdown.component';\nimport OHRITextArea from '../components/inputs/text-area/ohri-text-area.component';\nimport OHRIText from '../components/inputs/text/ohri-text.component';\nimport OHRIToggle from '../components/inputs/toggle/ohri-toggle.component';\nimport { OHRIRepeat } from '../components/repeat/ohri-repeat.component';\nimport { OHRIFieldValidator } from '../validators/ohri-form-validator';\nimport { EncounterLocationSubmissionHandler, ObsSubmissionHandler } from '../submission-handlers/base-handlers';\nimport { FieldValidator, SubmissionHandler } from '../types';\nimport OHRIFixedValue from '../components/inputs/fixed-value/ohri-fixed-value.component';\nimport OHRIMarkdown from '../components/inputs/markdown/ohri-markdown.component';\n\nconst baseFieldComponents: Array<RegistryItem> = [\n  {\n    id: 'OHRIText',\n    component: OHRIText,\n    type: 'text',\n  },\n  {\n    id: 'OHRIRadio',\n    component: OHRIRadio,\n    type: 'radio',\n  },\n  {\n    id: 'OHRIDate',\n    component: OHRIDate,\n    type: 'date',\n  },\n  {\n    id: 'OHRINumber',\n    component: OHRINumber,\n    type: 'number',\n  },\n  {\n    id: 'OHRIMultiSelect',\n    component: OHRIMultiSelect,\n    type: 'checkbox',\n  },\n  {\n    id: 'OHRIContentSwitcher',\n    component: OHRIContentSwitcher,\n    type: 'content-switcher',\n  },\n  {\n    id: 'OHRIEncounterLocationPicker',\n    component: OHRIEncounterLocationPicker,\n    type: 'encounter-location',\n  },\n  {\n    id: 'OHRIDropdown',\n    component: OHRIDropdown,\n    type: 'select',\n  },\n  {\n    id: 'OHRITextArea',\n    component: OHRITextArea,\n    type: 'textarea',\n  },\n  {\n    id: 'OHRIToggle',\n    component: OHRIToggle,\n    type: 'toggle',\n  },\n  {\n    id: 'OHRIObsGroup',\n    component: OHRIObsGroup,\n    type: 'group',\n  },\n  {\n    id: 'OHRIRepeat',\n    component: OHRIRepeat,\n    type: 'repeating',\n  },\n  {\n    id: 'OHRIFixedValue',\n    component: OHRIFixedValue,\n    type: 'fixed-value',\n  },\n  {\n    id: 'OHRIMarkdown',\n    component: OHRIMarkdown,\n    type: 'markdown',\n  },\n];\n\nconst baseHandlers: Array<RegistryItem> = [\n  {\n    id: 'ObsSubmissionHandler',\n    component: ObsSubmissionHandler,\n    type: 'obs',\n  },\n  {\n    id: 'ObsGroupHandler',\n    component: ObsSubmissionHandler,\n    type: 'obsGroup',\n  },\n  {\n    id: 'EncounterLocationSubmissionHandler',\n    component: EncounterLocationSubmissionHandler,\n    type: 'encounterLocation',\n  },\n];\n\nconst fieldValidators: Array<ValidatorRegistryItem> = [\n  {\n    id: 'OHRIFieldValidator',\n    component: OHRIFieldValidator,\n  },\n];\n\nexport const getFieldComponent = renderType => {\n  return baseFieldComponents.find(item => item.type == renderType)?.component;\n};\n\nexport function getHandler(type: string): SubmissionHandler {\n  return baseHandlers.find(handler => handler.type == type)?.component;\n}\n\nexport function addHandler(handler: RegistryItem) {\n  baseHandlers.push(handler);\n}\n\nexport function addFieldComponent(fieldComponent: RegistryItem) {\n  baseFieldComponents.push(fieldComponent);\n}\n\nexport function addvalidator(validator: ValidatorRegistryItem) {\n  if (validator) {\n    fieldValidators.push(validator);\n  }\n}\n\nexport function getValidator(id: string): FieldValidator {\n  return fieldValidators.find(validator => validator.id == id)?.component || fieldValidators[0].component;\n}\n\nexport interface RegistryItem {\n  id: string;\n  component: any;\n  type?: string;\n}\n\ninterface ValidatorRegistryItem extends RegistryItem {\n  component: FieldValidator;\n}\n","import React, { useEffect } from 'react';\nimport { OHRIFormContext } from '../../../ohri-form-context';\nimport { OHRIFormFieldProps } from '../../../types';\n\nconst OHRIFixedValue: React.FC<OHRIFormFieldProps> = ({ question, handler }) => {\n  const { encounterContext } = React.useContext(OHRIFormContext);\n  useEffect(() => {\n    if (question.value && typeof question.value == 'string') {\n      const value = question.value;\n      delete question.value;\n      question.value = handler.handleFieldSubmission(question, value, encounterContext);\n    }\n  }, []);\n  // return (\n  //   !question.isHidden && (\n  //     <div className={styles.formFields}>\n  //       <OHRILabel value={question.label} />\n  //       {question.value ? <OHRIValueDisplay value={question.value?.value} /> : <OHRIValueEmpty />}\n  //     </div>\n  //   )\n  // );\n  return <></>;\n};\n\nexport default OHRIFixedValue;\n","import React from 'react';\nimport { OHRIFormFieldProps } from '../../../types';\nimport ReactMarkdown from 'react-markdown';\n\nconst OHRIMarkdown: React.FC<OHRIFormFieldProps> = ({ question }) =>\n  !question.isHidden && <ReactMarkdown children={question.value.join('\\n')} />;\n\nexport default OHRIMarkdown;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./_page.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./_page.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport styles from './_page.scss';\nimport OHRIFormSection from '../section/ohri-form-section.component';\nimport { Waypoint } from 'react-waypoint';\nimport { Accordion, AccordionItem } from 'carbon-components-react';\n\nfunction OHRIFormPage({ page, onFieldChange, setSelectedPage, isCollapsed }) {\n  let newLabel = page.label.replace(/\\s/g, '');\n\n  const handleEnter = elementID => {\n    setSelectedPage(elementID);\n  };\n\n  return (\n    <Waypoint onEnter={() => handleEnter(newLabel)} topOffset=\"50%\" bottomOffset=\"60%\">\n      <div id={newLabel} className={styles.pageContent}>\n        <div style={{}} className={styles.pageHeader}>\n          <p className={styles.pageTitle}>{page.label}</p>\n        </div>\n        <Accordion>\n          {/* <p className={styles.required}>All fields are required unless marked optional</p> */}\n          {page.sections.map((sec, index) => {\n            return (\n              <AccordionItem title={sec.label} open={isCollapsed} className={styles.sectionContent} key={index}>\n                <div className={styles.formSection} key={index}>\n                  <OHRIFormSection\n                    fields={sec.questions}\n                    showTitle={page.sections.length > 1}\n                    onFieldChange={onFieldChange}\n                    sectionTitle={sec.label}\n                    key={index}\n                  />\n                </div>\n              </AccordionItem>\n            );\n          })}\n        </Accordion>\n      </div>\n    </Waypoint>\n  );\n}\n\nexport default OHRIFormPage;\n","import { useEffect } from 'react';\n\n// Sometimes you want to run parent effects before those of the children. E.g. when setting\n// something up or binding document event listeners. By passing the effect to the first child it\n// will run before any effects by later children.\n// For details, see: https://github.com/facebook/react/issues/15281#issuecomment-781196823\nexport function InstantEffect({ effect }) {\n  useEffect(() => effect?.(), [effect]);\n  return null;\n}\n","import { openmrsObservableFetch } from '@openmrs/esm-framework';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ConceptFalse, ConceptTrue, encounterRepresentation } from '../../constants';\nimport { OHRIFormContext } from '../../ohri-form-context';\nimport { saveEncounter } from '../../ohri-form.resource';\nimport { getHandler } from '../../registry/registry';\nimport {\n  EncounterDescriptor,\n  OHRIFormField,\n  OHRIFormPage as OHRIFormPageProps,\n  OHRIFormSchema,\n  OHRIFormSection,\n  SessionMode,\n} from '../../types';\nimport { cascadeVisibityToChildFields, inferInitialValueFromDefaultFieldValue } from '../../utils/ohri-form-helper';\nimport { isEmpty, isEmpty as isValueEmpty, OHRIFieldValidator } from '../../validators/ohri-form-validator';\nimport OHRIFormPage from '../page/ohri-form-page';\nimport { InstantEffect } from '../../utils/instant-effect';\nimport { FormSubmissionHandler } from '../../ohri-form.component';\nimport { isTrue } from '../../utils/boolean-utils';\nimport { evaluateExpression, FormNode } from '../../utils/expression-runner';\n\ninterface OHRIEncounterFormProps {\n  formJson: OHRIFormSchema;\n  patient: any;\n  encounterDate: Date;\n  provider: string;\n  location: { uuid: string; name: string };\n  values: Record<string, any>;\n  isCollapsed: boolean;\n  sessionMode: SessionMode;\n  scrollablePages: Set<OHRIFormPageProps>;\n  handlers: Map<string, FormSubmissionHandler>;\n  allInitialValues: Record<string, any>;\n  setAllInitialValues: (values: Record<string, any>) => void;\n  setScrollablePages: (pages: Set<OHRIFormPageProps>) => void;\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean) => void;\n  setSelectedPage: (page: string) => void;\n}\n\nexport const OHRIEncounterForm: React.FC<OHRIEncounterFormProps> = ({\n  formJson,\n  patient,\n  encounterDate,\n  provider,\n  location,\n  values,\n  isCollapsed,\n  sessionMode,\n  scrollablePages,\n  setScrollablePages,\n  setFieldValue,\n  setSelectedPage,\n  handlers,\n  allInitialValues,\n  setAllInitialValues,\n}) => {\n  const [fields, setFields] = useState<Array<OHRIFormField>>([]);\n  const [encounterLocation, setEncounterLocation] = useState(null);\n  const [encounter, setEncounter] = useState<EncounterDescriptor>(null);\n  const [form, setForm] = useState<OHRIFormSchema>(formJson);\n  const [obsGroupsToVoid, setObsGroupsToVoid] = useState([]);\n  const [formInitialValues, setFormInitialValues] = useState({});\n\n  const addScrollablePages = useCallback(() => {\n    formJson.pages.forEach(page => {\n      if (!page.isSubform) {\n        scrollablePages.add(page);\n      }\n    });\n    return () => {\n      formJson.pages.forEach(page => {\n        if (!page.isSubform) {\n          scrollablePages.delete(page);\n        }\n      });\n    };\n  }, [scrollablePages, formJson]);\n\n  const encounterContext = {\n    patient: patient,\n    encounter: encounter,\n    location: location,\n    sessionMode: sessionMode || (form?.encounter ? 'edit' : 'enter'),\n    date: encounterDate,\n  };\n\n  useEffect(() => {\n    if (!encounterLocation) {\n      setEncounterLocation(location);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    const allFormFields: Array<OHRIFormField> = [];\n    const tempInitVals = {};\n    form.pages.forEach(page =>\n      page.sections.forEach(section => {\n        section.questions.forEach(question => {\n          allFormFields.push(question);\n          if (question.type == 'obsGroup') {\n            question.questions.forEach(groupedField => {\n              // set group id\n              groupedField['groupId'] = question.id;\n              allFormFields.push(groupedField);\n            });\n          }\n        });\n      }),\n    );\n    // set Formik initial values\n    if (encounter) {\n      allFormFields.forEach(field => {\n        const handler = getHandler(field.type);\n        let existingVal = handler?.getInitialValue(encounter, field, allFormFields);\n        if (isEmpty(existingVal) && !isEmpty(field.questionOptions.defaultValue)) {\n          existingVal = inferInitialValueFromDefaultFieldValue(field, encounterContext, handler);\n        }\n        tempInitVals[field.id] = existingVal === null || existingVal === undefined ? '' : existingVal;\n        if (field.unspecified) {\n          tempInitVals[`${field.id}-unspecified`] = !!!existingVal;\n        }\n      });\n      setEncounterLocation(encounter.location);\n    } else {\n      const emptyValues = {\n        checkbox: [],\n        toggle: false,\n        default: '',\n      };\n      allFormFields.forEach(field => {\n        let value = null;\n        if (!isEmpty(field.questionOptions.defaultValue)) {\n          value = inferInitialValueFromDefaultFieldValue(field, encounterContext, getHandler(field.type));\n        }\n        if (!isEmpty(value)) {\n          tempInitVals[field.id] = value;\n        } else {\n          tempInitVals[field.id] =\n            emptyValues[field.questionOptions.rendering] != undefined\n              ? emptyValues[field.questionOptions.rendering]\n              : emptyValues.default;\n        }\n        if (field.unspecified) {\n          tempInitVals[`${field.id}-unspecified`] = false;\n        }\n      });\n    }\n    // prepare fields\n    setFields(\n      allFormFields.map(field => {\n        if (field.hide) {\n          evalHide({ value: field, type: 'field' }, allFormFields, tempInitVals);\n        } else {\n          field.isHidden = false;\n        }\n        if (typeof field.readonly == 'string' && field.readonly?.split(' ')?.length > 1) {\n          // needed to store the expression for further evaluations\n          field['readonlyExpression'] = field.readonly;\n          field.readonly = evaluateExpression(\n            field.readonly,\n            { value: field, type: 'field' },\n            allFormFields,\n            tempInitVals,\n            {\n              mode: sessionMode,\n            },\n          );\n        }\n        return field;\n      }),\n    );\n    form.pages.forEach(page => {\n      if (page.hide) {\n        evalHide({ value: page, type: 'page' }, allFormFields, tempInitVals);\n      } else {\n        page.isHidden = false;\n      }\n    });\n    setForm(form);\n    setFormInitialValues(tempInitVals);\n    setAllInitialValues({ ...allInitialValues, ...tempInitVals });\n  }, [encounter]);\n\n  useEffect(() => {\n    let subscription;\n    if (formJson.encounter && typeof formJson.encounter == 'string') {\n      subscription = openmrsObservableFetch<EncounterDescriptor>(\n        `/ws/rest/v1/encounter/${formJson.encounter}?v=${encounterRepresentation}`,\n      ).subscribe(({ data }) => setEncounter(data));\n    } else if (typeof formJson.encounter == 'object') {\n      setEncounter(formJson.encounter);\n    }\n    return () => subscription?.unsubscribe();\n  }, [formJson.encounter]);\n\n  const evalHide = (node, allFields: OHRIFormField[], allValues: Record<string, any>) => {\n    const { value, type } = node;\n    const isHidden = evaluateExpression(value['hide']?.hideWhenExpression, node, allFields, allValues, {\n      mode: sessionMode,\n    });\n    node.value.isHidden = isHidden;\n    // cascade visibility\n    if (type == 'page') {\n      value['sections'].forEach(section => {\n        section.isParentHidden = isHidden;\n        cascadeVisibityToChildFields(isHidden, section, allFields);\n      });\n    }\n    if (type == 'section') {\n      cascadeVisibityToChildFields(isHidden, value, allFields);\n    }\n  };\n\n  const addObs = useCallback((obsList: Array<any>, obs: any) => {\n    if (Array.isArray(obs)) {\n      obs.forEach(o => {\n        delete o.formFieldNamespace;\n        delete o.formFieldPath;\n        if (isValueEmpty(o.groupMembers)) {\n          delete o.groupMembers;\n        } else {\n          o.groupMembers.forEach(obsChild => {\n            delete obsChild.formFieldNamespace;\n            delete obsChild.formFieldPath;\n            if (isValueEmpty(obsChild.groupMembers)) {\n              delete obsChild.groupMembers;\n            }\n          });\n        }\n        obsList.push(o);\n      });\n    } else {\n      delete obs.formFieldNamespace;\n      delete obs.formFieldPath;\n      if (isValueEmpty(obs.groupMembers)) {\n        delete obs.groupMembers;\n      } else {\n        obs.groupMembers.forEach(obsChild => {\n          delete obsChild.formFieldNamespace;\n          delete obsChild.formFieldPath;\n          if (isValueEmpty(obsChild.groupMembers)) {\n            delete obsChild.groupMembers;\n          }\n        });\n      }\n      obsList.push(obs);\n    }\n  }, []);\n\n  const validate = useCallback(\n    values => {\n      let formHasErrors = false;\n      // handle field validation\n      fields\n        .filter(field => !field.isParentHidden && !field.disabled && !field.isHidden && !isTrue(field.readonly))\n        .filter(field => field['submission']?.unspecified != true)\n        .forEach(field => {\n          const errors = OHRIFieldValidator.validate(field, values[field.id]);\n          if (errors.length) {\n            field['submission'] = {\n              ...field['submission'],\n              errors: errors,\n            };\n            formHasErrors = true;\n            return;\n          }\n        });\n      return !formHasErrors;\n    },\n    [fields],\n  );\n\n  const handleFormSubmit = (values: Record<string, any>) => {\n    const obsForSubmission = [];\n    fields\n      .filter(field => field.value || field.type == 'obsGroup') // filter out fields with empty values except groups\n      .filter(field => !field.isParentHidden && !field.isHidden && (field.type == 'obs' || field.type == 'obsGroup'))\n      .filter(field => !field['groupId']) // filter out grouped obs\n      .forEach(field => {\n        if (field.type == 'obsGroup') {\n          const obsGroup = {\n            person: patient.id,\n            obsDatetime: encounterDate,\n            concept: field.questionOptions.concept,\n            location: encounterLocation,\n            order: null,\n            groupMembers: [],\n            uuid: field?.value?.uuid,\n            voided: false,\n          };\n          let hasValue = false;\n          field.questions.forEach(groupedField => {\n            if (groupedField.value) {\n              hasValue = true;\n              if (Array.isArray(groupedField.value)) {\n                obsGroup.groupMembers.push(...groupedField.value);\n              } else {\n                obsGroup.groupMembers.push(groupedField.value);\n              }\n            }\n          });\n          hasValue && addObs(obsForSubmission, obsGroup);\n        } else {\n          addObs(obsForSubmission, field.value);\n        }\n      });\n\n    // Add voided obs groups\n    obsGroupsToVoid.forEach(obs => addObs(obsForSubmission, obs));\n    let encounterForSubmission: EncounterDescriptor = {};\n    if (encounter) {\n      Object.assign(encounterForSubmission, encounter);\n      encounterForSubmission['location'] = encounterLocation.uuid;\n      // update encounter providers\n      const hasCurrentProvider =\n        encounterForSubmission['encounterProviders'].findIndex(encProvider => encProvider.provider.uuid == provider) !==\n        -1;\n      if (!hasCurrentProvider) {\n        encounterForSubmission['encounterProviders'] = [\n          ...encounterForSubmission.encounterProviders,\n          {\n            provider: provider,\n            encounterRole: '240b26f9-dd88-4172-823d-4a8bfeb7841f',\n          },\n        ];\n      }\n      encounterForSubmission['obs'] = obsForSubmission;\n    } else {\n      encounterForSubmission = {\n        patient: patient.id,\n        encounterDatetime: encounterDate,\n        location: encounterLocation.uuid,\n        encounterType: formJson.encounterType,\n        encounterProviders: [\n          {\n            provider: provider,\n            encounterRole: '240b26f9-dd88-4172-823d-4a8bfeb7841f',\n          },\n        ],\n        obs: obsForSubmission,\n      };\n    }\n    if (encounterForSubmission.obs?.length || encounterForSubmission.orders?.length) {\n      const ac = new AbortController();\n      return saveEncounter(ac, encounterForSubmission, encounter?.uuid);\n    }\n  };\n\n  const onFieldChange = (fieldName: string, value: any) => {\n    const field = fields.find(field => field.id == fieldName);\n    if (field.questionOptions.rendering == 'toggle') {\n      value = value ? ConceptTrue : ConceptFalse;\n    }\n    if (field.fieldDependants) {\n      field.fieldDependants.forEach(dep => {\n        const dependant = fields.find(f => f.id == dep);\n        evalHide({ value: dependant, type: 'field' }, fields, { ...values, [fieldName]: value });\n        if (dependant['readonlyExpression']) {\n          dependant.readonly = evaluateExpression(\n            dependant['readonlyExpression'],\n            { value: dependant, type: 'field' },\n            fields,\n            { ...values, [fieldName]: value },\n            {\n              mode: sessionMode,\n            },\n          );\n        }\n        let fields_temp = [...fields];\n        const index = fields_temp.findIndex(f => f.id == dep);\n        fields_temp[index] = dependant;\n        setFields(fields_temp);\n      });\n    }\n    if (field.pageDependants) {\n      field.pageDependants?.forEach(dep => {\n        const dependant = form.pages.find(f => f.label == dep);\n        evalHide({ value: dependant, type: 'page' }, fields, { ...values, [fieldName]: value });\n        let form_temp = form;\n        const index = form_temp.pages.findIndex(page => page.label == dep);\n        form_temp[index] = dependant;\n        setForm(form_temp);\n      });\n    }\n  };\n\n  // set handler\n  handlers.set(form.name, { validate: validate, submit: handleFormSubmit });\n\n  return (\n    <OHRIFormContext.Provider\n      value={{\n        values: values,\n        setFieldValue: setFieldValue,\n        setEncounterLocation: setEncounterLocation,\n        setObsGroupsToVoid: setObsGroupsToVoid,\n        obsGroupsToVoid: obsGroupsToVoid,\n        fields: fields,\n        encounterContext,\n      }}>\n      <InstantEffect effect={addScrollablePages} />\n      {form.pages.map((page, index) => {\n        if (isTrue(page.isHidden)) {\n          return null;\n        }\n        if (isTrue(page.isSubform) && page.subform?.form) {\n          if (sessionMode != 'enter' && !page.subform?.form.encounter) {\n            return null;\n          }\n          // filter out all nested subforms\n          page.subform.form.pages = page.subform.form.pages.filter(page => !isTrue(page.isSubform));\n          return (\n            <OHRIEncounterForm\n              key={index}\n              formJson={page.subform?.form}\n              patient={patient}\n              encounterDate={encounterDate}\n              provider={provider}\n              location={location}\n              values={values}\n              isCollapsed={isCollapsed}\n              sessionMode={sessionMode}\n              scrollablePages={scrollablePages}\n              setAllInitialValues={setAllInitialValues}\n              allInitialValues={allInitialValues}\n              setScrollablePages={setScrollablePages}\n              setFieldValue={setFieldValue}\n              setSelectedPage={setSelectedPage}\n              handlers={handlers}\n            />\n          );\n        }\n        return (\n          <OHRIFormPage\n            page={page}\n            onFieldChange={onFieldChange}\n            setSelectedPage={setSelectedPage}\n            isCollapsed={isCollapsed}\n          />\n        );\n      })}\n    </OHRIFormContext.Provider>\n  );\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './ohri-form.scss';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  useCurrentPatient,\n  useSessionUser,\n  showToast,\n  attach,\n  getAsyncLifecycle,\n  registerExtension,\n  detach,\n} from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\nimport LoadingIcon from './components/loading/loading.component';\nimport { OHRIFormSchema, SessionMode, OHRIFormPage as OHRIFormPageProps } from './types';\nimport OHRIFormSidebar from './components/sidebar/ohri-form-sidebar.component';\nimport { OHRIEncounterForm } from './components/encounter/ohri-encounter-form';\nimport { isTrue } from './utils/boolean-utils';\n\ninterface OHRIFormProps {\n  formJson: OHRIFormSchema;\n  onSubmit?: any;\n  onCancel?: any;\n  encounterUuid?: string;\n  mode?: SessionMode;\n  handleClose?: any;\n  patientUUID?: string;\n}\n\nexport interface FormSubmissionHandler {\n  validate: (values) => boolean;\n  submit: (values) => Promise<any>;\n}\n\nconst OHRIForm: React.FC<OHRIFormProps> = ({\n  formJson,\n  encounterUuid,\n  mode,\n  onSubmit,\n  onCancel,\n  handleClose,\n  patientUUID,\n}) => {\n  const [currentProvider, setCurrentProvider] = useState(null);\n  const [location, setEncounterLocation] = useState(null);\n  const [, patient] = useCurrentPatient(patientUUID);\n  const session = useSessionUser();\n  const [initialValues, setInitialValues] = useState({});\n  const encDate = new Date();\n  const [scrollAblePages, setScrollablePages] = useState(new Set<OHRIFormPageProps>());\n  const [selectedPage, setSelectedPage] = useState('');\n  const [collapsed, setCollapsed] = useState(true);\n  const { t } = useTranslation();\n  const handlers = new Map<string, FormSubmissionHandler>();\n  const form = useMemo(() => {\n    const copy: OHRIFormSchema = JSON.parse(JSON.stringify(formJson));\n    if (encounterUuid && !copy.encounter) {\n      // Assign this to the parent form\n      copy.encounter = encounterUuid;\n    }\n    let i = copy.pages.length;\n    // let's loop backwards so that we splice in the opposite direction\n    while (i--) {\n      const page = copy.pages[i];\n      if (isTrue(page.isSubform) && !isTrue(page.isHidden) && page.subform?.form?.encounterType == copy.encounterType) {\n        copy.pages.splice(i, 1, ...page.subform.form.pages.filter(page => !isTrue(page.isSubform)));\n      }\n    }\n    return copy;\n  }, [encounterUuid]);\n\n  const sessionMode = useMemo(() => {\n    if (mode) {\n      return mode;\n    }\n    if (encounterUuid) {\n      return 'edit';\n    }\n    return 'enter';\n  }, [mode]);\n\n  useEffect(() => {\n    const extDetails = {\n      id: 'ohri-form-header-toggle-ext',\n      moduleName: '@openmrs/esm-ohri-app',\n      slot: 'patient-chart-workspace-header-slot',\n      load: getAsyncLifecycle(\n        () => import('./components/section-collapsible-toggle/ohri-section-collapsible-toggle.component'),\n        {\n          featureName: 'ohri-form-header-toggle',\n          moduleName: '@openmrs/esm-ohri-app',\n        },\n      ),\n      meta: {\n        handleCollapse: (value: boolean) => {\n          setCollapsed(value);\n        },\n      },\n    };\n    // registerExtension(extDetails.id, extDetails);\n    // attach('patient-chart-workspace-header-slot', extDetails.id);\n\n    return () => {\n      detach('patient-chart-workspace-header-slot', extDetails.id);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (session) {\n      if (!encounterUuid) {\n        setEncounterLocation(session.sessionLocation);\n      }\n      setCurrentProvider(session.currentProvider.uuid);\n    }\n  }, [session]);\n\n  const handleFormSubmit = (values: Record<string, any>) => {\n    // validate form and it's suforms\n    let isSubmitable = true;\n    handlers.forEach(handler => {\n      const result = handler?.validate?.(values);\n      if (!result) {\n        isSubmitable = false;\n      }\n    });\n    // do submit\n    if (isSubmitable) {\n      const submissions = [...handlers].map(([key, handler]) => {\n        return handler?.submit?.(values);\n      });\n      Promise.all(submissions).then(results => {\n        if (mode == 'edit') {\n          showToast({\n            description: t('updatedRecordDescription', 'The patient encounter was updated'),\n            title: t('updatedRecord', 'Record updated'),\n            kind: 'success',\n            critical: true,\n          });\n        } else {\n          showToast({\n            description: t('createdRecordDescription', 'A new encounter was created'),\n            title: t('createdRecord', 'Record created'),\n            kind: 'success',\n            critical: true,\n          });\n        }\n        onSubmit?.();\n      });\n    }\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={Yup.object({})}\n      onSubmit={(values, { setSubmitting }) => {\n        handleFormSubmit(values);\n        setSubmitting(false);\n      }}>\n      {props => (\n        <Form className={`bx--form no-padding ng-untouched ng-pristine ng-invalid ${styles.ohriForm}`}>\n          {!patient ? (\n            <LoadingIcon />\n          ) : (\n            <div className={styles.ohriFormContainer}>\n              <OHRIFormSidebar\n                scrollAblePages={scrollAblePages}\n                selectedPage={selectedPage}\n                mode={mode}\n                onCancel={onCancel}\n                handleClose={handleClose}\n                values={props.values}\n                setValues={props.setValues}\n                allowUnspecifiedAll={formJson.allowUnspecifiedAll}\n                defaultPage={formJson.defaultPage}\n              />\n              <div className={styles.formContent}>\n                <OHRIEncounterForm\n                  formJson={form}\n                  patient={patient}\n                  encounterDate={encDate}\n                  provider={currentProvider}\n                  location={location}\n                  values={props.values}\n                  isCollapsed={collapsed}\n                  sessionMode={sessionMode}\n                  scrollablePages={scrollAblePages}\n                  setAllInitialValues={setInitialValues}\n                  allInitialValues={initialValues}\n                  setScrollablePages={setScrollablePages}\n                  setFieldValue={props.setFieldValue}\n                  setSelectedPage={setSelectedPage}\n                  handlers={handlers}\n                />\n              </div>\n            </div>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default OHRIForm;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","locals","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","exports","ConceptTrue","ConceptFalse","encounterRepresentation","isTrue","value","evaluateExpression","expression","node","allFields","allFieldValues","context","isEmpty","allFieldsKeys","includes","registerDependency","find","candidate","isValueEmpty","questionId","f","parts","trim","split","mode","forEach","part","index","determinant","field","determinantValue","questionOptions","rendering","regx","RegExp","replace","eval","error","console","type","pageDependants","Set","add","label","sectionDependants","fieldDependants","OHRIFieldValidator","validate","unspecified","required","errCode","errMessage","Array","isArray","length","defaultFormsRegistry","getForm","packageName","formNamespace","version","isStrict","formsRegistry","forms","lookupForms","form","getFormByVersion","getLatestFormVersion","loadSubforms","json","parentForm","pages","page","isSubform","subform","name","package","latest","semver","maxSatisfying","semanticVersion","requiredVersion","satisfies","pkg","formVersion","coerce","applyFormIntent","intent","originalJson","parentOverrides","jsonBuffer","JSON","parse","stringify","defaultPage","availableIntents","markdown","updateMarkdownRequiredBehaviour","behaviourOverrides","targetBehaviour","behaviours","behaviour","undefined","readonly","subform_intent","pageBehaviour","hide","fallBackBehaviour","sections","section","secBehaviour","questions","question","updateQuestionRequiredBehaviour","filter","override","childQuestion","requiredIntentBehaviour","defaultIntentBehaviour","bevahiour","combinedBehaviours","assign","defaultValue","updateExcludeIntentBehaviour","excludedIntents","setDefaultFormsRegistry","registry","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","div","className","styles","Loading","description","withOverlay","small","scrollIntoView","viewId","document","getElementById","behavior","block","inline","scrollAblePages","selectedPage","onCancel","handleClose","values","setValues","allowUnspecifiedAll","useState","setActiveLink","useEffect","isHidden","joinWord","unspecifiedFields","useMemo","key","endsWith","markAllAsUnspecified","useCallback","toggled","aria-hidden","onClick","activeID","selected","hr","style","marginBottom","Toggle","labelText","labelA","labelB","onToggle","Button","width","kind","OHRIFormContext","React","getConcept","conceptUuid","v","openmrsObservableFetch","pipe","response","OHRIUnspecified","useField","setFieldValue","previouslyUnspecified","setPreviouslyUnspecified","errors","emptyValue","handleOnChange","Checkbox","onChange","checked","disabled","getFieldControl","concept","getFieldComponent","supportsUnspecified","fields","onFieldChange","sectionTitle","showTitle","component","qnFragment","handler","getHandler","OHRIObsGroup","deleteControl","groupContent","groupMember","Column","Row","OHRILabel","tooltipText","TooltipDefinition","direction","tabIndex","span","OHRIValueEmpty","fontSize","color","OHRIValueDisplay","cascadeVisibityToChildFields","visibility","candidateIds","q","isParentHidden","inferInitialValueFromDefaultFieldValue","answers","answer","moment","isValid","isNaN","OHRIDefaultFieldValueValidator","handleFieldSubmission","getConceptNameAndUUID","openmrsFetch","then","data","results","display","fetchConceptNameByUuid","conceptName","ObsSubmissionHandler","multiSelectObsHandler","constructObs","sessionMode","format","voided","getInitialValue","encounter","allFormFields","obsGroup","obs","uuid","parentField","groupMembers","subscribe","result","datatype","toDate","getDisplayValue","chosenOption","option","person","patient","obsDatetime","date","location","order","opt","some","observations","baseFieldComponents","encounterContext","previousValue","setPreviousValue","setErrors","setConceptName","onBlur","conceptTooltip","TextInput","onFocus","FormGroup","paddingBottom","legendText","RadioButtonGroup","defaultSelected","valueSelected","orientation","RadioButton","formatObj","Intl","DateTimeFormat","window","navigator","language","formatToParts","Date","placeHolder","obj","join","carbonDateformat","toLocaleDateString","DatePicker","datePickerType","refinedDate","getTime","getTimezoneOffset","dateFormat","DatePickerInput","placeholder","NumberInput","invalidText","max","min","allowEmpty","size","useTranslation","t","counter","setCounter","touched","setTouched","questionItems","initiallySelectedQuestionItems","item","UnorderedList","marginLeft","displayValue","ListItem","MultiSelect","selectedItems","selectedItem","items","initialSelectedItems","titleText","itemToString","selectedIndex","findIndex","ContentSwitcher","Switch","text","setEncounterLocation","locations","setLocations","tag","locationTag","createErrorHandler","Dropdown","setItems","TextArea","rows","toggleOptions","labelFalse","labelTrue","setQuestions","obsGroupsToVoid","useFormikContext","viewPort","useLayoutType","rowWidth","alreadyMappedGroup","unMappedObsGroups","tempCounter","handleAdd","count","idSuffix","next","cloneDeep","initialValue","getInitialValueFromObs","nodes","paddingTop","renderIcon","TrashCan32","splice","removeQuestion","hasIconOnly","margin","marginTop","Add16","nextCount","repeatOptions","addText","ReactMarkdown","children","baseHandlers","renderType","setSelectedPage","isCollapsed","newLabel","Waypoint","onEnter","topOffset","bottomOffset","p","Accordion","sec","AccordionItem","title","open","OHRIFormSection","InstantEffect","effect","OHRIEncounterForm","formJson","encounterDate","provider","scrollablePages","setScrollablePages","handlers","allInitialValues","setAllInitialValues","setFields","encounterLocation","setEncounter","setForm","setObsGroupsToVoid","setFormInitialValues","addScrollablePages","delete","tempInitVals","groupedField","existingVal","emptyValues","checkbox","toggle","default","evalHide","subscription","unsubscribe","allValues","hideWhenExpression","addObs","obsList","formFieldNamespace","formFieldPath","obsChild","formHasErrors","fieldName","dep","dependant","fields_temp","form_temp","set","submit","encounterForSubmission","obsForSubmission","hasValue","abortController","payload","encounterUuid","url","encProvider","encounterProviders","encounterRole","encounterDatetime","encounterType","orders","AbortController","headers","method","body","signal","Provider","OHRIFormPage","onSubmit","patientUUID","currentProvider","setCurrentProvider","useCurrentPatient","session","useSessionUser","initialValues","setInitialValues","encDate","collapsed","Map","copy","i","getAsyncLifecycle","featureName","moduleName","detach","sessionLocation","Formik","enableReinitialize","validationSchema","Yup","setSubmitting","isSubmitable","submissions","Promise","all","showToast","critical","handleFormSubmit","props","Form","OHRIFormSidebar","LoadingIcon"],"sourceRoot":""}